{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/layout/contents/contents.component.ts","webpack:///src/app/layout/contents/contents.component.html","webpack:///src/app/layout/controls/controls.component.ts","webpack:///src/app/layout/controls/controls.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/layout/login/login.component.ts","webpack:///src/app/layout/login/login.component.html","webpack:///src/app/layout/uploads/modal/delete-modal/delete-modal.component.ts","webpack:///src/app/layout/uploads/modal/delete-modal/delete-modal.component.html","webpack:///src/app/layout/uploads/modal/upload-modal/upload-modal.component.ts","webpack:///src/app/layout/uploads/modal/upload-modal/upload-modal.component.html","webpack:///src/app/layout/uploads/uploads.component.ts","webpack:///src/app/layout/uploads/uploads.component.html","webpack:///src/app/materials/materials.module.ts","webpack:///src/app/services/content.service.ts","webpack:///src/app/services/services.module.ts","webpack:///src/app/services/socket.service.ts","webpack:///src/app/services/upload.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","path","config","url","options","AppModule","declarations","providers","bootstrap","ContentsComponent","ControlsComponent","LayoutComponent","subMenuList","icon","route","name","currentSubMenu","router","snav","toggle","LoginComponent","DeleteModalComponent","uploadService","dialogRef","data","isSuccess","deleteList","Array","isArray","push","console","log","filter","item","forEach","index","delete_file","subscribe","result","close","event","cancel","confirm","UploadModalComponent","fileData","uploadId","valueUploaded","uplodedSuccessFile","formData","FormData","append","upload_file","events","type","UploadProgress","Math","round","loaded","total","Response","status","check","body","nextUpload","length","send","fileInput","i","target","files","fileProgress","UploadsComponent","dialog","tableHeader","currentSelectedContent","list","uploadList","children","masterSelected","is_selected","selectListContentEvent","content","find","undefined","sendData","open","width","height","afterClosed","incoming","ngOnInit","openDialog","MaterialsModule","ContentService","providedIn","ServicesModule","SocketService","UploadService","http","httpOptions","headers","get","post","JSON","stringify","pipe","errorHandl","reportProgress","observe","error","errorMessage","ErrorEvent","message","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,QAAMC,IAAI,GAAG,uBAAb;AACA,QAAMC,MAAM,GAAmB;AAAEC,SAAG,EAAEF,IAAP;AAAaG,aAAO,EAAE;AAAtB,KAA/B;;QAwBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBARJ,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,6DAAeX,OAAf,CAAuBQ,MAAvB,CAJO,EAKP,2EALO,EAMP,wEANO,CAQI;;;;0HAGFG,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,wEAmBkB,EAlBlB,4EAkBkB,EAjBlB,sFAiBkB,EAhBlB,sFAgBkB,EAflB,mFAekB,EAdlB,+GAckB,EAblB,+GAakB;AAbE,kBAGpB,uEAHoB,EAIpB,oEAJoB,EAKpB,4FALoB,EAKG,4DALH,EAOpB,2EAPoB,EAQpB,wEARoB;AAaF,O;AALJ,K;;;;;sEAKLA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,4EAHY,EAIZ,sFAJY,EAKZ,sFALY,EAMZ,mFANY,EAOZ,+GAPY,EAQZ,+GARY,CADN;AAWRX,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,6DAAeD,OAAf,CAAuBQ,MAAvB,CAJO,EAKP,2EALO,EAMP,wEANO,CAXD;AAmBRK,mBAAS,EAAE,EAnBH;AAoBRC,mBAAS,EAAE,CAAC,2DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AAAG;;AAAe;;;;;;;;sEDOLA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTX,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaU,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AAAG;;AAAe;;;;;;;;sEDOLA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTZ,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACSgB;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AACA;;AACF;;;;;;AAFE;;AAAA;;;;;;AAOJ;;;;;;AACA;;;;QDXCW,e;AAmBX,iCAAc;AAAA;;AAfd,aAAAC,WAAA,GAAc,CAAC;AACbrB,YAAE,EAAE,CADS;AAEbsB,cAAI,EAAE,EAFO;AAGbC,eAAK,EAAE,OAHM;AAIbC,cAAI,EAAE;AAJO,SAAD,EAMd;AACExB,YAAE,EAAE,CADN;AAEEsB,cAAI,EAAE,EAFR;AAGEC,eAAK,EAAE,QAHT;AAIEC,cAAI,EAAE;AAJR,SANc,CAAd;AAaA,aAAAC,cAAA,GAAiB,KAAKJ,WAAL,CAAiB,CAAjB,CAAjB;AAEiB;;;;mCAET,CACP;;;gCAEOK,M,EAAQ;AACd,eAAKC,IAAL,CAAUC,MAAV;;AACA,kBAAQF,MAAM,CAACH,KAAf;AACE,iBAAK,OAAL;AACI,mBAAKE,cAAL,GAAsBC,MAAtB;AACA;;AACJ,iBAAK,QAAL;AACI,mBAAKD,cAAL,GAAsBC,MAAtB;AACA;;AACJ;AACI;AARN;AAUD;;;;;;;uBApCUN,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;;;;;;;;;;;;;;;;;ACP5B;;AACI;;AACI;;AAAwB;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAsB,WAAtB;;AAAwB;;AAAU;;AAAI;;AAAW;;AACzE;;AAA6B;;AAAoD;;AACrF;;AAEA;;AACI;;AACI;;AACI;;AAIJ;;AACJ;;AAEA;;AACI;;AACA;;AACJ;;AAEJ;;AAGJ;;;;AArBqC;;AAAA;;AAMmB;;AAAA;;AAQ9B;;AAAA;;AACD;;AAAA;;;;;;;;;sEDXZA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTb,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;gBAEzB,uD;iBAAU,M,EAAQ;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AETrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoB,c;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA;AAAA;ACP3B;;AAAG;;AAAY;;;;;;;;sEDOFA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTtB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMQ;;AACI;;AAA+B;;AAAI;;AAAW;;AAAM;;AAAM;;AAAO;;AACrE;;;;;;;;AAEI;;AAAkC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAK;;;;;;AAP3E;;AACI;;AACA;;AACA;;AAGA;;AAGJ;;;;;;;;;;;AARI;;AAAA;;AAEc;;AAAA,mGAAqC,UAArC,EAAqC,IAArC;;;;QDITqB,oB;AAKX,oCACUC,aADV,EAESC,SAFT,EAG8CC,IAH9C,EAGuD;AAAA;;AAF7C,aAAAF,aAAA,GAAAA,aAAA;AACD,aAAAC,SAAA,GAAAA,SAAA;AACqC,aAAAC,IAAA,GAAAA,IAAA;AAN9C,aAAAC,SAAA,GAAmB,EAAnB;AACA,aAAAC,UAAA,GAAoB,EAApB;;AAOE,YAAIC,KAAK,CAACC,OAAN,CAAc,KAAKJ,IAAnB,CAAJ,EAA8B;AAC5B,eAAKE,UAAL,GAAkB,KAAKF,IAAvB;AACD,SAFD,MAEO;AACL,eAAKE,UAAL,CAAgBG,IAAhB,CAAqB,KAAKL,IAA1B;AACD;;AACDM,eAAO,CAACC,GAAR,CAAY,KAAKL,UAAjB;AACA;;;;mCAEM,CACP;;;+BAEMX,I,EAAM;AACX,eAAKW,UAAL,GAAkB,KAAKA,UAAL,CAAgBM,MAAhB,CAChB,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAAClB,IAAL,KAAcA,IAAlB;AAAA,WADY,CAAlB;AAGD;;;kCAES;AAAA;;AACR,eAAKW,UAAL,CAAgBQ,OAAhB,CAAwB,UAACD,IAAD,EAAOE,KAAP,EAAiB;AACvC,iBAAI,CAACb,aAAL,CAAmBc,WAAnB,CAA+BH,IAA/B,EAAqCI,SAArC,CAA+C,UAAAb,IAAI,EAAI;AACrDM,qBAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,qBAAO,CAACC,GAAR,CAAYI,KAAZ;;AACA,kBAAIX,IAAI,CAACA,IAAL,CAAUc,MAAV,KAAqB,SAAzB,EAAoC;AAClCR,uBAAO,CAACC,GAAR,CAAY,SAAZ;AACA,qBAAI,CAACN,SAAL,CAAeU,KAAf,IAAwB,IAAxB;AACD;AACF,aAPD;AAQD,WATD;AAUD;;;iCAEQ;AACP,eAAKZ,SAAL,CAAegB,KAAf,CAAqB;AAAEC,iBAAK,EAAE,QAAT;AAAoBhB,gBAAI,EAAG;AAA3B,WAArB;AACD;;;;;;;uBA1CUH,oB,EAAoB,uI,EAAA,sI,EAAA,gEAQT,wEARS,EAQM,CARN,C;AAQM,K;;;YAR1BA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,oX;AAAA;AAAA;ACVjC;;AAAmB;;AAAM;;AAEzB;;AACI;;AAUJ;;AAEA;;AACI;;AACA;;AAA0B;AAAA,mBAAS,IAAAoB,MAAA,EAAT;AAAiB,WAAjB;;AAAgC;;AAAK;;AAC/D;;AAA0B;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAAoC;;AAAO;;AACrE;;AACJ;;;;AAjBS;;AAAA;;;;;;;;;sEDOIrB,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTvB,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;kBAQ5B;;kBAAY,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AElBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACegB;;AACI;;AAA+B;;AAAI;;AACvC;;;;;;AAEI;;AAAkC;;AAAK;;;;;;AANnD;;AACI;;AACI;;AAGA;;AAGJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACJ;;;;;;;;;;;AAZsB;;AAAA,kGAAqC,UAArC,EAAqC,IAArC;;AAQd;;AAAA;;AACqC;;AAAA;;;;QDdxC2C,oB;AAOX,oCACUrB,aADV,EAESC,SAFT,EAG8CC,IAH9C,EAGuD;AAAA;;AAF7C,aAAAF,aAAA,GAAAA,aAAA;AACD,aAAAC,SAAA,GAAAA,SAAA;AACqC,aAAAC,IAAA,GAAAA,IAAA;AAT9C,aAAAoB,QAAA,GAAqB,EAArB;AACA,aAAAC,QAAA,GAAW,CAAX;AACA,aAAAC,aAAA,GAAuB,EAAvB;AACA,aAAArB,SAAA,GAAmB,EAAnB;AACA,aAAAsB,kBAAA,GAAqB,EAArB;AAMK;;;;mCAEG,CACP;;;+BAEM;AAAA;;AACL,cAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,kBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKN,QAAL,CAAc,KAAKC,QAAnB,CAAxB;AACA,eAAKvB,aAAL,CAAmB6B,WAAnB,CAA+BH,QAA/B,EAAyCX,SAAzC,CAAmD,UAAAe,MAAM,EAAI;AAC3D,gBAAIA,MAAM,CAACC,IAAP,KAAgB,mEAAcC,cAAlC,EAAkD;AAChDxB,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,MAAI,CAACc,QAA/B;AACAf,qBAAO,CAACC,GAAR,CACE,mBADF,EAEEwB,IAAI,CAACC,KAAL,CAAYJ,MAAM,CAACK,MAAP,GAAgBL,MAAM,CAACM,KAAxB,GAAiC,GAA5C,IAAmD,GAFrD;AAIA,oBAAI,CAACZ,aAAL,CAAmB,MAAI,CAACD,QAAxB,IAAoCU,IAAI,CAACC,KAAL,CACjCJ,MAAM,CAACK,MAAP,GAAgBL,MAAM,CAACM,KAAxB,GAAiC,GADC,CAApC;AAGD,aATD,MASO,IAAIN,MAAM,CAACC,IAAP,KAAgB,mEAAcM,QAAlC,EAA4C;AACjD;AACA,kBAAIP,MAAM,CAACQ,MAAP,KAAkB,GAAtB,EAA2B;AACzB;AACA,sBAAI,CAACnC,SAAL,CAAe,MAAI,CAACoB,QAApB,IAAgC,IAAhC;AACAf,uBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,MAAI,CAACa,QAAL,CAAc,MAAI,CAACC,QAAnB,CAAjC;AACA,oBAAMgB,KAAK,GAAQT,MAAM,CAACU,IAA1B;AACAhC,uBAAO,CAACC,GAAR,CAAY8B,KAAZ;;AACA,sBAAI,CAACE,UAAL;AACD,eAPD,MAOO;AACL;AACA,sBAAI,CAACtC,SAAL,CAAe,MAAI,CAACoB,QAApB,IAAgC,KAAhC;AACAf,uBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,CAAE,MAAI,CAACa,QAAL,CAAc,MAAI,CAACC,QAAnB,CAAnC;;AACA,sBAAI,CAACkB,UAAL;AACD;AACF,aAfM,MAeA;AACLjC,qBAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF,WA5BD;AA6BD;;;qCAEY;AACX,eAAKc,QAAL;;AACA,cAAI,KAAKA,QAAL,GAAgB,KAAKD,QAAL,CAAcoB,MAAlC,EAA0C;AACxC,iBAAKC,IAAL;AACD,WAFD,MAEO;AACL;AACAnC,mBAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF;;;qCAEYmC,S,EAAgB;AAC3B,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAAV,CAAiBC,KAAjB,CAAuBL,MAA3C,EAAmDG,CAAC,EAApD,EAAwD;AACtD,iBAAKvB,QAAL,CAAcf,IAAd,CAAmBqC,SAAS,CAACE,MAAV,CAAiBC,KAAjB,CAAuBF,CAAvB,CAAnB;AACArC,mBAAO,CAACC,GAAR,CAAY,KAAKa,QAAL,CAAcuB,CAAd,CAAZ;AACD;AACF;;;iCAEQ;AACP,eAAK5C,SAAL,CAAegB,KAAf,CAAqB;AAAEC,iBAAK,EAAE,QAAT;AAAoBhB,gBAAI,EAAG,KAAKuB;AAAhC,WAArB;AACD;;;;;;;uBArEUJ,oB,EAAoB,uI,EAAA,sI,EAAA,gEAUT,wEAVS,EAUM,CAVN,C;AAUM,K;;;YAV1BA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,ghB;AAAA;AAAA;ACVjC;;AAAmB;;AAAW;;AAE9B;;AACI;;AAAM;AAAA,mBAAY,IAAAsB,IAAA,EAAZ;AAAkB,WAAlB;;AACF;;AACI;;AACE;;AAAU;;AAAW;;AAAY;;AACnC;;AACA;;AAAsC;AAAA,mBAAS,IAAAK,YAAA,QAAT;AAA6B,WAA7B;;AAAtC;;AACA;;AACA;;AAAwD;;AAAM;;AAClE;;AACA;;AACA;;AAeJ;;AACJ;;AAEA;;AACI;;AACA;;AAA0B;AAAA,mBAAS,IAAA7B,MAAA,EAAT;AAAiB,WAAjB;;AAAgC;;AAAK;;AAC/D;;AACJ;;;;AAtBa;;AAAA;;;;;;;;;sEDHAE,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT7C,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;kBAU5B;;kBAAY,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEpBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACOQ;;AAAsF;AAAA;;AAAA;;AAAA,oCAAoB,QAApB,EAA8B,OAAF,uBAA5B;AAA4B,SAA5B;;AACpF;;AAAU;;AAAM;;AAAY;;AAC9B;;;;;;;;;;;;;;;;;;;;;;AASQ;;AACI;;AACA;;AAAgG;AAAA;;AAAA;;AAAA;AAAA,WAA4B,QAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,SAA5B;;AAChG;;AACJ;;;;;;AAJsC;;AAEpB;;AAAA,oMAAiF,SAAjF,EAAiF,sBAAjF;;;;;;;;;;;;;;AAGlB;;AACI;;AAAkG;AAAA;;AAAA;AAAA;AAAA,WAA6B,QAA7B,EAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAA7B;;AAClG;;AACJ;;;;;;AAHmC;;AACjB;;AAAA,8LAAmF,SAAnF,EAAmF,mBAAnF;;;;;;;;;;;;;AAKlB;;AACI;;AAAK;;;;AAD6B;;;;;;AAEtC;;AACI;;AAAO;;AAAY;;AACvB;;;;;;AADW;;AAAA;;;;;;;;;;;;;;AAIX;;AACI;;AAAK;;;;AAD6B;;;;;;AAEtC;;AACI;;AAAO;;AAAY;;AACvB;;;;;;AAFmC;;AACxB;;AAAA;;;;;;;;;;;;;;AAIX;;AACI;;AAAK;;;;AAD6B;;;;;;AAEtC;;AACI;;AAAO;;AAAY;;AACvB;;;;;;AAFmC;;AACxB;;AAAA;;;;;;AAIX;;AACI;;AAAU;;;;AADwB;;;;;;AAEtC;;AACI;;AAAO;;AAAiB;;AAC5B;;;;;;AAFmC;;AACxB;;AAAA;;;;;;;;;;;;;;AAIX;;AACI;;AAAO;;;;AAD2B;;;;;;;;AAEtC;;AACI;;AACA;;AAAU;;AAAU;;AAAY;;AAChC;;AACA;;AACA;;AAAU;;AAAI;;AAAY;;AAC1B;;AAEA;;AAAkF;AAAA;;AAAA;;AAAA;;AAAA,oCAAoB,QAApB,EAA8B,OAA9B;AAA4B,SAA5B;;AAClF;;AAAU;;AAAM;;AAAY;;AAC9B;;AACF;;;;AAXmC;;;;;;AAcvC;;;;;;AACA;;;;QD7DCuE,gB;AAeX,gCAAoBjD,aAApB,EAAyDkD,MAAzD,EAA4E;AAAA;;AAAxD,aAAAlD,aAAA,GAAAA,aAAA;AAAqC,aAAAkD,MAAA,GAAAA,MAAA;AAZzD,aAAAC,WAAA,GAAwB,CACtB,QADsB,EAEtB,MAFsB,EAGtB,MAHsB,EAItB,MAJsB,EAKtB,WALsB,EAMtB,QANsB,CAAxB;AAUA,aAAAC,sBAAA,GAAyB,EAAzB;AAE8E;;;;mCAEtE;AAAA;;AACN,eAAKpD,aAAL,CAAmBqD,IAAnB,GAA0BtC,SAA1B,CAAoC,UAACC,MAAD,EAAY;AAC9CR,mBAAO,CAACC,GAAR,CAAYO,MAAZ;AACA,kBAAI,CAACsC,UAAL,GAAkB,IAAI,0EAAJ,CAAkCtC,MAAM,CAACd,IAAP,CAAYqD,QAA9C,CAAlB;AACD,WAHD;AAID;;;4CAEmB;AAClB/C,iBAAO,CAACC,GAAR,CAAY,kBAAkB,KAAK+C,cAAnC;;AACA,cAAI,KAAKA,cAAT,EAAyB;AAAA,uDACJ,KAAKF,UAAL,CAAgBpD,IADZ;AAAA;;AAAA;AACvB,kEAAyC;AAAA,oBAA9BS,IAA8B;AACvCA,oBAAI,CAAC8C,WAAL,GAAmB,KAAKD,cAAxB;AACA,qBAAKE,sBAAL,CAA4B/C,IAA5B;AACD;AAJsB;AAAA;AAAA;AAAA;AAAA;AAKxB,WALD,MAKO;AAAA,wDACc,KAAK2C,UAAL,CAAgBpD,IAD9B;AAAA;;AAAA;AACL,qEAAyC;AAAA,oBAA9BS,KAA8B;AACvCA,qBAAI,CAAC8C,WAAL,GAAmB,KAAKD,cAAxB;AACA,qBAAKE,sBAAL,CAA4B/C,KAA5B;AACD;AAJI;AAAA;AAAA;AAAA;AAAA;AAKN;AACF;;;+CAEsBgD,O,EAAS;AAC9B,cAAIA,OAAO,CAACF,WAAZ,EAAyB;AACvB,gBAAI,KAAKL,sBAAL,CAA4BV,MAA5B,KAAuC,CAA3C,EAA8C;AAC5C,mBAAKU,sBAAL,CAA4B7C,IAA5B,CAAiCoD,OAAjC;AACD,aAFD,MAEO;AACL,kBAAMpB,KAAK,GAAG,KAAKa,sBAAL,CAA4BQ,IAA5B,CACZ,UAAAjD,IAAI;AAAA,uBAAIA,IAAI,CAAClB,IAAL,KAAckE,OAAO,CAAClE,IAA1B;AAAA,eADQ,CAAd;;AAGA,kBAAI8C,KAAK,KAAKsB,SAAd,EAAyB;AACvB,qBAAKT,sBAAL,CAA4B7C,IAA5B,CAAiCoD,OAAjC;AACD;AACF;AACF,WAXD,MAWO;AACL,iBAAKP,sBAAL,GAA8B,KAAKA,sBAAL,CAA4B1C,MAA5B,CAC5B,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAAClB,IAAL,KAAckE,OAAO,CAAClE,IAA1B;AAAA,aADwB,CAA9B;AAGD;AACF;;;mCAEUsC,I,EAAM+B,Q,EAAU;AAAA;;AACzB,cAAI7D,SAAJ;;AAEA,kBAAQ8B,IAAR;AACE,iBAAK,QAAL;AACE9B,uBAAS,GAAG,KAAKiD,MAAL,CAAYa,IAAZ,CAAiB,+FAAjB,EAAuC;AACjDC,qBAAK,EAAE,KAD0C;AAEjDC,sBAAM,EAAE,KAFyC;AAGjD/D,oBAAI,EAAE4D;AAH2C,eAAvC,CAAZ;AAKA;;AACF,iBAAK,QAAL;AACE7D,uBAAS,GAAG,KAAKiD,MAAL,CAAYa,IAAZ,CAAiB,+FAAjB,EAAuC;AACjDC,qBAAK,EAAE,KAD0C;AAEjDC,sBAAM,EAAE,KAFyC;AAGjD/D,oBAAI,EAAE4D;AAH2C,eAAvC,CAAZ;AAKA;;AACF;AACE;AAhBJ;;AAmBA7D,mBAAS,CAACiE,WAAV,GAAwBnD,SAAxB,CAAkC,UAACC,MAAD,EAAY;AAC5C,gBAAMmD,QAAQ,GAAGnD,MAAjB;;AACA,oBAAQe,IAAR;AACE,mBAAK,QAAL;AACEvB,uBAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC0D,QAAvC;;AACA,sBAAI,CAACC,QAAL;;AACA;;AACF,mBAAK,QAAL;AACE5D,uBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC0D,QAAnC;;AACA,sBAAI,CAACC,QAAL;;AACA;;AACF;AACE;AAVJ;AAYD,WAdD;AAeD;;;;;;;uBA/FUnB,gB,EAAgB,uI,EAAA,mI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;0EAChB,gE,EAAU,I;;;;;;;;;;;;;;ACdvB;;AACI;;AACI;;AAAM;;AAAM;;AACZ;;AAA6C;AAAA,mBAAS,IAAAmB,QAAA,EAAT;AAAmB,WAAnB;;AAC3C;;AAAU;;AAAO;;AACnB;;AACA;;AACA;;AAGA;;AAAiD;AAAA,mBAAS,IAAAC,UAAA,CAAW,QAAX,EAAqB,EAArB,CAAT;AAAiC,WAAjC;;AAC/C;;AAAU;;AAAW;;AAAY;;AACnC;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAKA;;AAIJ;;AACA;;AACI;;AAEA;;AAGJ;;AACA;;AACI;;AAEA;;AAGJ;;AACA;;AACI;;AAEA;;AAGJ;;AACA;;AACI;;AAEA;;AAGJ;;AACA;;AACI;;AAEA;;AAYJ;;AAEA;;AACA;;AACJ;;AACJ;;AAEJ;;;;AAvEgB;;AAAA;;AASS;;AAAA;;AAyDM;;AAAA,uGAA4C,uBAA5C,EAA4C,IAA5C;;AACP;;AAAA;;;;;;;;;sED7DXpB,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTzE,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;gBAC1B,uD;iBAAU,gE,EAAU;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEdva4F,e;;;;;YAAAA;;;;yBAAAA,e;AAAe,O;AAAA,gBA/HjB,CACP;AACA,+DAFO,EAGP,sEAHO,EAIP,oEAJO,EAMP;AACA,mEAPO,EAQP,6DARO,EASP,sEATO,EAUP,uEAVO,EAWP,mEAXO,EAYP,qEAZO,EAaP,iEAbO,EAcP,uEAdO,EAeP,sEAfO,EAgBP,kEAhBO,EAiBP,gEAjBO,EAmBP,mEAnBO,EAoBP,2DApBO,EAqBP,sEArBO,EAsBP,6FAtBO,EAwBP;AACA,qFAzBO,EA0BP,oFA1BO,EA2BP,sEA3BO,EA4BP,mFA5BO,EA6BP,wEA7BO,EA8BP,qFA9BO,EA+BP,oEA/BO,EAgCP,4EAhCO,EAiCP,sEAjCO,EAkCP,iFAlCO,EAmCP,yEAnCO,EAoCP,2EApCO,EAqCP,+EArCO,EAsCP,8EAtCO,EAuCP,qEAvCO,EAwCP,uEAxCO,EAyCP,qEAzCO,EA0CP,qEA1CO,EA2CP,2EA3CO,EA4CP,oFA5CO,EA6CP,4FA7CO,EA8CP,uEA9CO,EA+CP,uEA/CO,EAgDP,yEAhDO,EAiDP,2EAjDO,EAkDP,yEAlDO,EAmDP,oFAnDO,EAoDP,8EApDO,EAqDP,qEArDO,EAsDP,2EAtDO,EAuDP,uEAvDO,EAwDP,qEAxDO,EAyDP,2EAzDO,EA0DP,+EA1DO,EA2DP,2EA3DO,EA4DP,qEA5DO,CA+HiB,EA/DxB;AACA,+DA8DwB,EA7DxB,sEA6DwB,EA5DxB,oEA4DwB,EA1DxB;AACA,mEAyDwB,EAxDxB,6DAwDwB,EAvDxB,sEAuDwB,EAtDxB,uEAsDwB,EArDxB,mEAqDwB,EApDxB,qEAoDwB,EAnDxB,iEAmDwB,EAlDxB,uEAkDwB,EAjDxB,sEAiDwB,EAhDxB,kEAgDwB,EA/CxB,gEA+CwB,EA7CxB,mEA6CwB,EA5CxB,2DA4CwB,EA3CxB,sEA2CwB,EA1CxB,6FA0CwB,EAxCxB;AACA,qFAuCwB,EAtCxB,oFAsCwB,EArCxB,sEAqCwB,EApCxB,mFAoCwB,EAnCxB,wEAmCwB,EAlCxB,qFAkCwB,EAjCxB,oEAiCwB,EAhCxB,4EAgCwB,EA/BxB,sEA+BwB,EA9BxB,iFA8BwB,EA7BxB,yEA6BwB,EA5BxB,2EA4BwB,EA3BxB,+EA2BwB,EA1BxB,8EA0BwB,EAzBxB,qEAyBwB,EAxBxB,uEAwBwB,EAvBxB,qEAuBwB,EAtBxB,qEAsBwB,EArBxB,2EAqBwB,EApBxB,oFAoBwB,EAnBxB,4FAmBwB,EAlBxB,uEAkBwB,EAjBxB,uEAiBwB,EAhBxB,yEAgBwB,EAfxB,2EAewB,EAdxB,yEAcwB,EAbxB,oFAawB,EAZxB,8EAYwB,EAXxB,qEAWwB,EAVxB,2EAUwB,EATxB,uEASwB,EARxB,qEAQwB,EAPxB,2EAOwB,EANxB,+EAMwB,EALxB,2EAKwB,EAJxB,qEAIwB;;;;0HAAfA,e,EAAe;AAAA,kBA9HxB;AACA,iEA6HwB,EA5HxB,sEA4HwB,EA3HxB,oEA2HwB,EAzHxB;AACA,qEAwHwB,EAvHxB,6DAuHwB,EAtHxB,sEAsHwB,EArHxB,uEAqHwB,EApHxB,mEAoHwB,EAnHxB,qEAmHwB,EAlHxB,iEAkHwB,EAjHxB,uEAiHwB,EAhHxB,sEAgHwB,EA/GxB,kEA+GwB,EA9GxB,gEA8GwB,EA5GxB,mEA4GwB,EA3GxB,2DA2GwB,EA1GxB,sEA0GwB,EAzGxB,6FAyGwB,EAvGxB;AACA,uFAsGwB,EArGxB,oFAqGwB,EApGxB,sEAoGwB,EAnGxB,mFAmGwB,EAlGxB,wEAkGwB,EAjGxB,qFAiGwB,EAhGxB,oEAgGwB,EA/FxB,4EA+FwB,EA9FxB,sEA8FwB,EA7FxB,iFA6FwB,EA5FxB,yEA4FwB,EA3FxB,2EA2FwB,EA1FxB,+EA0FwB,EAzFxB,8EAyFwB,EAxFxB,qEAwFwB,EAvFxB,uEAuFwB,EAtFxB,qEAsFwB,EArFxB,qEAqFwB,EApFxB,2EAoFwB,EAnFxB,oFAmFwB,EAlFxB,4FAkFwB,EAjFxB,uEAiFwB,EAhFxB,uEAgFwB,EA/ExB,yEA+EwB,EA9ExB,2EA8EwB,EA7ExB,yEA6EwB,EA5ExB,oFA4EwB,EA3ExB,8EA2EwB,EA1ExB,qEA0EwB,EAzExB,2EAyEwB,EAxExB,uEAwEwB,EAvExB,qEAuEwB,EAtExB,2EAsEwB,EArExB,+EAqEwB,EApExB,2EAoEwB,EAnExB,qEAmEwB;AAnEX,kBAIb;AACA,iEALa,EAMb,sEANa,EAOb,oEAPa,EASb;AACA,qEAVa,EAWb,6DAXa,EAYb,sEAZa,EAab,uEAba,EAcb,mEAda,EAeb,qEAfa,EAgBb,iEAhBa,EAiBb,uEAjBa,EAkBb,sEAlBa,EAmBb,kEAnBa,EAoBb,gEApBa,EAsBb,mEAtBa,EAuBb,2DAvBa,EAwBb,sEAxBa,EAyBb,6FAzBa,EA2Bb;AACA,uFA5Ba,EA6Bb,oFA7Ba,EA8Bb,sEA9Ba,EA+Bb,mFA/Ba,EAgCb,wEAhCa,EAiCb,qFAjCa,EAkCb,oEAlCa,EAmCb,4EAnCa,EAoCb,sEApCa,EAqCb,iFArCa,EAsCb,yEAtCa,EAuCb,2EAvCa,EAwCb,+EAxCa,EAyCb,8EAzCa,EA0Cb,qEA1Ca,EA2Cb,uEA3Ca,EA4Cb,qEA5Ca,EA6Cb,qEA7Ca,EA8Cb,2EA9Ca,EA+Cb,oFA/Ca,EAgDb,4FAhDa,EAiDb,uEAjDa,EAkDb,uEAlDa,EAmDb,yEAnDa,EAoDb,2EApDa,EAqDb,yEArDa,EAsDb,oFAtDa,EAuDb,8EAvDa,EAwDb,qEAxDa,EAyDb,2EAzDa,EA0Db,uEA1Da,EA2Db,qEA3Da,EA4Db,2EA5Da,EA6Db,+EA7Da,EA8Db,2EA9Da,EA+Db,qEA/Da;AAmEW,O;AAJX,K;;;;;sEAIJA,e,EAAe;cAhI3B,sDAgI2B;eAhIlB;AACRjG,iBAAO,EAAE,CACP;AACA,mEAFO,EAGP,sEAHO,EAIP,oEAJO,EAMP;AACA,uEAPO,EAQP,6DARO,EASP,sEATO,EAUP,uEAVO,EAWP,mEAXO,EAYP,qEAZO,EAaP,iEAbO,EAcP,uEAdO,EAeP,sEAfO,EAgBP,kEAhBO,EAiBP,gEAjBO,EAmBP,mEAnBO,EAoBP,2DApBO,EAqBP,sEArBO,EAsBP,6FAtBO,EAwBP;AACA,yFAzBO,EA0BP,oFA1BO,EA2BP,sEA3BO,EA4BP,mFA5BO,EA6BP,wEA7BO,EA8BP,qFA9BO,EA+BP,oEA/BO,EAgCP,4EAhCO,EAiCP,sEAjCO,EAkCP,iFAlCO,EAmCP,yEAnCO,EAoCP,2EApCO,EAqCP,+EArCO,EAsCP,8EAtCO,EAuCP,qEAvCO,EAwCP,uEAxCO,EAyCP,qEAzCO,EA0CP,qEA1CO,EA2CP,2EA3CO,EA4CP,oFA5CO,EA6CP,4FA7CO,EA8CP,uEA9CO,EA+CP,uEA/CO,EAgDP,yEAhDO,EAiDP,2EAjDO,EAkDP,yEAlDO,EAmDP,oFAnDO,EAoDP,8EApDO,EAqDP,qEArDO,EAsDP,2EAtDO,EAuDP,uEAvDO,EAwDP,qEAxDO,EAyDP,2EAzDO,EA0DP,+EA1DO,EA2DP,2EA3DO,EA4DP,qEA5DO,CADD;AAgERL,iBAAO,EAAE,CACP;AACA,mEAFO,EAGP,sEAHO,EAIP,oEAJO,EAMP;AACA,uEAPO,EAQP,6DARO,EASP,sEATO,EAUP,uEAVO,EAWP,mEAXO,EAYP,qEAZO,EAaP,iEAbO,EAcP,uEAdO,EAeP,sEAfO,EAgBP,kEAhBO,EAiBP,gEAjBO,EAmBP,mEAnBO,EAoBP,2DApBO,EAqBP,sEArBO,EAsBP,6FAtBO,EAwBP;AACA,yFAzBO,EA0BP,oFA1BO,EA2BP,sEA3BO,EA4BP,mFA5BO,EA6BP,wEA7BO,EA8BP,qFA9BO,EA+BP,oEA/BO,EAgCP,4EAhCO,EAiCP,sEAjCO,EAkCP,iFAlCO,EAmCP,yEAnCO,EAoCP,2EApCO,EAqCP,+EArCO,EAsCP,8EAtCO,EAuCP,qEAvCO,EAwCP,uEAxCO,EAyCP,qEAzCO,EA0CP,qEA1CO,EA2CP,2EA3CO,EA4CP,oFA5CO,EA6CP,4FA7CO,EA8CP,uEA9CO,EA+CP,uEA/CO,EAgDP,yEAhDO,EAiDP,2EAjDO,EAkDP,yEAlDO,EAmDP,oFAnDO,EAoDP,8EApDO,EAqDP,qEArDO,EAsDP,2EAtDO,EAuDP,uEAvDO,EAwDP,qEAxDO,EAyDP,2EAzDO,EA0DP,+EA1DO,EA2DP,2EA3DO,EA4DP,qEA5DO;AAhED,S;AAgIkB,Q;;;;;;;;;;;;;;;;;;AC3L5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKauG,c,GAEX,0BAAc;AAAA;AAAG,K;;;uBAFNA,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVC,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,iBANd,CACT,6DADS,EAET,6DAFS,EAGT,+DAHS;;;;;sEAMAA,c,EAAc;cAP1B,sDAO0B;eAPjB;AACRxF,mBAAS,EAAE,CACT,6DADS,EAET,6DAFS,EAGT,+DAHS;AADH,S;AAOiB,Q;;;;;;;;;;;;;;;;;;ACZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKayF,a,GAEX,yBAAc;AAAA;AAAG,K;;;uBAFNA,a;AAAa,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVF,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;ACL1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaG,a;AAWX,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AATpB,aAAA/F,GAAA,GAAM,uBAAN,CASsC,CAPtC;;AACA,aAAAgG,WAAA,GAAc;AACZC,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,4BAAgB;AADO,WAAhB;AADG,SAAd;AAMyC;;;;+BAErC;AACF,iBAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,KAAKlG,GAAL,GAAW,cAAzB,CAAP;AACD;;;oCAEWqB,I,EAAM;AAChB,iBAAO,KAAK0E,IAAL,CAAUI,IAAV,CAAoB,KAAKnG,GAAL,GAAW,gBAA/B,EAAiDoG,IAAI,CAACC,SAAL,CAAehF,IAAf,CAAjD,EAAuE,KAAK2E,WAA5E,EACNM,IADM,CAEL,6DAAM,CAAN,CAFK,EAGL,kEAAW,KAAKC,UAAhB,CAHK,CAAP;AAKD;;;oCAEW1D,Q,EAAU;AACpB,iBAAO,KAAKkD,IAAL,CACNI,IADM,CACD,KAAKnG,GAAL,GAAW,oBADV,EACgC6C,QADhC,EAC0C;AAC/C2D,0BAAc,EAAE,IAD+B;AAE/CC,mBAAO,EAAE;AAFsC,WAD1C,CAAP;AAKD,S,CAED;;;;mCACWC,K,EAAO;AAChB,cAAIC,YAAY,GAAG,EAAnB;;AACA,cAAID,KAAK,CAACA,KAAN,YAAuBE,UAA3B,EAAuC;AACrC;AACAD,wBAAY,GAAGD,KAAK,CAACA,KAAN,CAAYG,OAA3B;AACD,WAHD,MAGO;AACL;AACAF,wBAAY,yBAAkBD,KAAK,CAACjD,MAAxB,wBAA4CiD,KAAK,CAACG,OAAlD,CAAZ;AACD;;AACDlF,iBAAO,CAACC,GAAR,CAAY+E,YAAZ;AACA,iBAAO,wDAAWA,YAAX,CAAP;AACF;;;;;;;uBA7CWb,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVH,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMmB,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAItF,OAAO,CAAC+E,KAAR,CAAcO,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'k-master';\n}\n","<app-layout></app-layout>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialsModule } from './materials/materials.module';\nimport { ServicesModule } from './services/services.module';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { LayoutComponent } from './layout/layout.component';\nimport { LoginComponent } from './layout/login/login.component';\nimport { ContentsComponent } from './layout/contents/contents.component';\nimport { ControlsComponent } from './layout/controls/controls.component';\nimport { UploadsComponent } from './layout/uploads/uploads.component';\nimport { UploadModalComponent } from './layout/uploads/modal/upload-modal/upload-modal.component';\nimport { DeleteModalComponent } from './layout/uploads/modal/delete-modal/delete-modal.component';\n\nconst path = 'http://localhost:3003';\nconst config: SocketIoConfig = { url: path, options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    LoginComponent,\n    ContentsComponent,\n    ControlsComponent,\n    UploadsComponent,\n    UploadModalComponent,\n    DeleteModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SocketIoModule.forRoot(config),\n    MaterialsModule,\n    ServicesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contents',\n  templateUrl: './contents.component.html',\n  styleUrls: ['./contents.component.css']\n})\nexport class ContentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contents works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-controls',\n  templateUrl: './controls.component.html',\n  styleUrls: ['./controls.component.css']\n})\nexport class ControlsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>controls works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  @ViewChild('snav', { static: false }) snav;\n\n  subMenuList = [{\n    id: 1,\n    icon: '',\n    route: 'KList',\n    name: 'Karaoke List'\n  },\n  {\n    id: 2,\n    icon: '',\n    route: 'upload',\n    name: 'Upload'\n  }];\n\n  currentSubMenu = this.subMenuList[0];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  routeTo(router) {\n    this.snav.toggle();\n    switch (router.route) {\n      case 'KList':\n          this.currentSubMenu = router;\n          break;\n      case 'upload':\n          this.currentSubMenu = router;\n          break;\n      default:\n          break;\n    }\n  }\n\n}\n","<div class=\"example-container\">\n    <mat-toolbar color=\"primary\" class=\"example-toolbar\">\n        <button mat-icon-button (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\n        <h1 class=\"example-app-name\">Karaoke Manager &nbsp;>&nbsp;{{currentSubMenu.name}}</h1>\n    </mat-toolbar>\n\n    <mat-sidenav-container class=\"example-sidenav-container\">\n        <mat-sidenav #snav class=\"sideNav\">\n            <mat-nav-list>\n                <a (click)=\"routeTo(nav)\" mat-list-item *ngFor=\"let nav of subMenuList\">\n                {{nav.name}}\n                <mat-divider> </mat-divider>\n              </a>\n            </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-sidenav-content>\n            <app-contents *ngIf=\"currentSubMenu.route==='KList'\"></app-contents>\n            <app-uploads *ngIf=\"currentSubMenu.route==='upload'\"></app-uploads>\n        </mat-sidenav-content>\n\n    </mat-sidenav-container>\n\n    <!-- <app-footer class=\"footer\"></app-footer> -->\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit, Optional, Inject, ViewChild } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { HttpEventType } from '@angular/common/http';\nimport { UploadService } from './../../../../services/upload.service';\n\n@Component({\n  selector: 'app-delete-modal',\n  templateUrl: './delete-modal.component.html',\n  styleUrls: ['./delete-modal.component.css']\n})\nexport class DeleteModalComponent implements OnInit {\n\n  isSuccess: any[] = [];\n  deleteList: any[] = [];\n\n  constructor(\n    private uploadService: UploadService,\n    public dialogRef: MatDialogRef<DeleteModalComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (Array.isArray(this.data)) {\n      this.deleteList = this.data;\n    } else {\n      this.deleteList.push(this.data);\n    }\n    console.log(this.deleteList);\n   }\n\n  ngOnInit(): void {\n  }\n\n  remove(name) {\n    this.deleteList = this.deleteList.filter(\n      item => item.name !== name\n    );\n  }\n\n  confirm() {\n    this.deleteList.forEach((item, index) => {\n      this.uploadService.delete_file(item).subscribe(data => {\n        console.log(data);\n        console.log(index);\n        if (data.data.result === 'success') {\n          console.log('success');\n          this.isSuccess[index] = true;\n        }\n      });\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close({ event: 'Cancel' , data:  ''});\n  }\n\n}\n","<h1 matDialogTitle>Delete</h1>\n\n<mat-dialog-content>\n    <div *ngFor=\"let file of deleteList; let i=index\" style=\"display: flex;\">\n        {{i+1}}. {{file.name}}\n        <span class=\"fill-remaining-space\"></span>\n        <ng-container *ngIf=\"isSuccess[i]; else notSuccess\">\n            <mat-icon aria-label=\"success\">done</mat-icon>&nbsp;<span>Deleted</span>\n        </ng-container>\n        <ng-template #notSuccess>\n            <mat-icon aria-label=\"notSuccess\" (click)=\"remove(file.name)\">clear</mat-icon>\n        </ng-template>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <span class=\"fill-remaining-space\"></span>\n    <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Close</button>\n    <button mat-raised-button (click)=\"confirm()\" color=\"primary\">Confirm</button>\n    <span class=\"fill-remaining-space\"></span>\n</mat-dialog-actions>\n","import { Component, OnInit, Optional, Inject, ViewChild } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { HttpEventType } from '@angular/common/http';\nimport { UploadService } from './../../../../services/upload.service';\n\n@Component({\n  selector: 'app-upload-modal',\n  templateUrl: './upload-modal.component.html',\n  styleUrls: ['./upload-modal.component.css']\n})\nexport class UploadModalComponent implements OnInit {\n  fileData: string[] = [];\n  uploadId = 0;\n  valueUploaded: any[] = [];\n  isSuccess: any[] = [];\n  uplodedSuccessFile = [];\n\n  constructor(\n    private uploadService: UploadService,\n    public dialogRef: MatDialogRef<UploadModalComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  send() {\n    const formData = new FormData();\n    formData.append('file', this.fileData[this.uploadId]);\n    this.uploadService.upload_file(formData).subscribe(events => {\n      if (events.type === HttpEventType.UploadProgress) {\n        console.log(\"uploadId: \", this.uploadId);\n        console.log(\n          \"Upload progress: \",\n          Math.round((events.loaded / events.total) * 100) + \"%\"\n        );\n        this.valueUploaded[this.uploadId] = Math.round(\n          (events.loaded / events.total) * 100\n        );\n      } else if (events.type === HttpEventType.Response) {\n        // console.log(events);\n        if (events.status === 200) {\n          // Upload success\n          this.isSuccess[this.uploadId] = true;\n          console.log('Upload Success : ', this.fileData[this.uploadId]);\n          const check: any = events.body;\n          console.log(check);\n          this.nextUpload();\n        } else {\n          // Error upload\n          this.isSuccess[this.uploadId] = false;\n          console.log('Fail to upload : ', + this.fileData[this.uploadId]);\n          this.nextUpload();\n        }\n      } else {\n        console.log('Large File');\n      }\n    });\n  }\n\n  nextUpload() {\n    this.uploadId++;\n    if (this.uploadId < this.fileData.length) {\n      this.send();\n    } else {\n      // Finish upload all files // Do something\n      console.log('Finish upload all files');\n    }\n  }\n\n  fileProgress(fileInput: any) {\n    for (let i = 0; i < fileInput.target.files.length; i++) {\n      this.fileData.push(fileInput.target.files[i]);\n      console.log(this.fileData[i]);\n    }\n  }\n\n  cancel() {\n    this.dialogRef.close({ event: 'Cancel' , data:  this.uplodedSuccessFile});\n  }\n\n}\n","<h1 matDialogTitle>File Upload</h1>\n\n<mat-dialog-content>\n    <form (ngSubmit)=\"send()\">\n        <div class=\"form-group fixed\">\n            <label for=\"file\" class=\"custom-file-upload\">\n              <mat-icon>file_upload</mat-icon> Select Files\n            </label>\n            <input type=\"file\" id=\"file\" multiple (change)=fileProgress($event)>\n            <span class=\"fill-remaining-space\"></span>\n            <button mat-raised-button class=\"right\" color=\"primary\">Submit</button>\n        </div>\n        <br>\n        <div *ngFor=\"let file of fileData; let i=index\">\n            <div class=\"right\">\n                <ng-container *ngIf=\"isSuccess[i]; else notSuccess\">\n                    <mat-icon aria-label=\"success\">done</mat-icon>\n                </ng-container>\n                <ng-template #notSuccess>\n                    <mat-icon aria-label=\"notSuccess\">clear</mat-icon>\n                </ng-template>\n            </div>\n            <div>\n                {{i+1}}. {{file.name}} - {{file.type}} - {{file.size}}\n                <mat-progress-bar mode=\"determinate\" [value]=\"valueUploaded[i]\" color=\"primary\"></mat-progress-bar>\n            </div>\n            <br>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <span class=\"fill-remaining-space\"></span>\n    <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Close</button>\n    <span class=\"fill-remaining-space\"></span>\n</mat-dialog-actions>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { FilesMeta } from './uploads-metadata';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadService } from '../../services/upload.service';\nimport { UploadModalComponent } from './modal/upload-modal/upload-modal.component';\nimport { DeleteModalComponent } from './modal/delete-modal/delete-modal.component';\n\n@Component({\n  selector: 'app-uploads',\n  templateUrl: './uploads.component.html',\n  styleUrls: ['./uploads.component.css'],\n})\nexport class UploadsComponent implements OnInit {\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\n\n  tableHeader: string[] = [\n    'select',\n    'name',\n    'type',\n    'size',\n    'extension',\n    'action',\n  ];\n  uploadList: MatTableDataSource<FilesMeta>;\n  masterSelected: boolean;\n  currentSelectedContent = [];\n\n  constructor(private uploadService: UploadService, public dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.uploadService.list().subscribe((result) => {\n      console.log(result);\n      this.uploadList = new MatTableDataSource<FilesMeta>(result.data.children);\n    });\n  }\n\n  selectMasterEvent() {\n    console.log('Select All : ' + this.masterSelected);\n    if (this.masterSelected) {\n      for (const item of this.uploadList.data) {\n        item.is_selected = this.masterSelected;\n        this.selectListContentEvent(item);\n      }\n    } else {\n      for (const item of this.uploadList.data) {\n        item.is_selected = this.masterSelected;\n        this.selectListContentEvent(item);\n      }\n    }\n  }\n\n  selectListContentEvent(content) {\n    if (content.is_selected) {\n      if (this.currentSelectedContent.length === 0) {\n        this.currentSelectedContent.push(content);\n      } else {\n        const check = this.currentSelectedContent.find(\n          item => item.name === content.name\n        );\n        if (check === undefined) {\n          this.currentSelectedContent.push(content);\n        }\n      }\n    } else {\n      this.currentSelectedContent = this.currentSelectedContent.filter(\n        item => item.name !== content.name\n      );\n    }\n  }\n\n  openDialog(type, sendData) {\n    let dialogRef: any;\n\n    switch (type) {\n      case 'upload':\n        dialogRef = this.dialog.open(UploadModalComponent, {\n          width: '70%',\n          height: '70%',\n          data: sendData,\n        });\n        break;\n      case 'delete':\n        dialogRef = this.dialog.open(DeleteModalComponent, {\n          width: '50%',\n          height: '50%',\n          data: sendData,\n        });\n        break;\n      default:\n        break;\n    }\n\n    dialogRef.afterClosed().subscribe((result) => {\n      const incoming = result;\n      switch (type) {\n        case 'upload':\n          console.log('UploadFile Incomming : ', incoming);\n          this.ngOnInit();\n          break;\n        case 'delete':\n          console.log('Delete Incomming : ', incoming);\n          this.ngOnInit();\n          break;\n        default:\n          break;\n      }\n    });\n  }\n}\n","<div class=\"layout\">\n    <mat-toolbar color=\"primary\">\n        <span>Upload</span>\n        <button mat-icon-button matTooltip=\"Refresh\" (click)=\"ngOnInit()\">\n          <mat-icon>refresh</mat-icon>\n        </button>\n        <span class=\"fill-remaining-space\"></span>\n        <button *ngIf=\"currentSelectedContent.length > 0\" mat-icon-button matTooltip=\"Delete\" (click)=\"openDialog('delete', currentSelectedContent)\" style=\"width: 100px;\">\n          <mat-icon>delete</mat-icon> &nbsp; Delete\n        </button>\n        <button mat-icon-button matTooltip=\"Upload file\" (click)=\"openDialog('upload', '')\" style=\"width: 100px;\">\n          <mat-icon>file_upload</mat-icon> &nbsp; Upload\n        </button>\n    </mat-toolbar>\n\n    <div class=\"tableContainer\">\n        <table mat-table [dataSource]=\"uploadList\" class=\"tableStyle\">\n            <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','width':'10%'}\">\n                    Select\n                    <mat-checkbox [ngClass]=\"{'checkboxselect':masterSelected, 'checkboxdiselect':!masterSelected}\" [(ngModel)]=\"masterSelected\" name=\"list_name\" value=\"m1\" (change)=\"selectMasterEvent()\">\n                    </mat-checkbox>\n                </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <mat-checkbox [ngClass]=\"{'checkboxselect':row.is_selected, 'checkboxdiselect':!row.is_selected}\" [(ngModel)]=\"row.is_selected\" name=\"list_name\" value=\"row.id\" (change)=\"selectListContentEvent(row)\">\n                    </mat-checkbox>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','width':'25%'}\">\n                    Name </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <span> {{row.name}}</span>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"type\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%'}\">\n                    Type </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.type}}</span>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"size\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'15%'}\">\n                    Size </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.size}}</span>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"extension\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%'}\">\n                    Extension </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.extension}}</span>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"action\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'20%'}\">\n                    Action </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <button mat-raised-button matTooltip=\"Play\" color=\"primary\" class=\"menu-button\">\n                    <mat-icon>play_arrow</mat-icon> &nbsp; Preview\n                    </button>\n                    <button mat-raised-button matTooltip=\"Import to Karaoke\" color=\"primary\" class=\"menu-button\">\n                    <mat-icon>edit</mat-icon> &nbsp; Import\n                    </button>\n\n                    <button mat-raised-button matTooltip=\"Delete\" color=\"primary\" class=\"menu-button\" (click)=\"openDialog('delete', row)\">\n                    <mat-icon>delete</mat-icon> &nbsp; Delete\n                  </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"tableHeader; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: tableHeader;\"></tr>\n        </table>\n    </div>\n\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n\nimport { MatVideoModule } from 'mat-video';\nimport { NgxAudioPlayerModule } from 'ngx-audio-player';\nimport { ClickOutsideModule } from 'ng-click-outside';\n\n@NgModule({\n  imports: [\n    // additional\n    MatVideoModule,\n    NgxAudioPlayerModule,\n    ClickOutsideModule,\n\n    // CDK\n    A11yModule,\n    BidiModule,\n    DragDropModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n    ScrollingModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n\n    // angular\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n\n  exports: [\n    // additional\n    MatVideoModule,\n    NgxAudioPlayerModule,\n    ClickOutsideModule,\n\n    // CDK\n    A11yModule,\n    BidiModule,\n    DragDropModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n    ScrollingModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n\n    // angular\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatTreeModule\n  ]\n})\n\nexport class MaterialsModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentService {\n\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { UploadService } from './upload.service';\nimport { SocketService } from './socket.service';\nimport { ContentService } from './content.service';\n\n@NgModule({\n  providers: [\n    UploadService,\n    SocketService,\n    ContentService\n  ]\n})\nexport class ServicesModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  url = 'http://localhost:3004';\n\n  // Http Headers\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  list(): any {\n    return this.http.get(this.url + '/upload/list');\n  }\n\n  delete_file(data) {\n    return this.http.post<any>(this.url + '/upload/delete', JSON.stringify(data), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.errorHandl)\n    );\n  }\n\n  upload_file(formData) {\n    return this.http\n    .post(this.url + '/upload/fileUpload', formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  // Error handling\n  errorHandl(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}