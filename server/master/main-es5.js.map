{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/directive/uppercase.directive.ts","webpack:///src/app/layout/contents/contents.component.ts","webpack:///src/app/layout/contents/contents.component.html","webpack:///src/app/layout/controls/controls.component.ts","webpack:///src/app/layout/controls/controls.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/layout/login/login.component.ts","webpack:///src/app/layout/login/login.component.html","webpack:///src/app/layout/player/player-list/player-list.component.ts","webpack:///src/app/layout/player/player-list/player-list.component.html","webpack:///src/app/layout/player/player.component.ts","webpack:///src/app/layout/player/player.component.html","webpack:///src/app/layout/uploads/modal/delete-modal/delete-modal.component.ts","webpack:///src/app/layout/uploads/modal/delete-modal/delete-modal.component.html","webpack:///src/app/layout/uploads/modal/import-modal/import-modal.component.ts","webpack:///src/app/layout/uploads/modal/import-modal/import-modal.component.html","webpack:///src/app/layout/uploads/modal/preview-modal/preview-modal.component.ts","webpack:///src/app/layout/uploads/modal/preview-modal/preview-modal.component.html","webpack:///src/app/layout/uploads/modal/upload-modal/upload-modal.component.ts","webpack:///src/app/layout/uploads/modal/upload-modal/upload-modal.component.html","webpack:///src/app/layout/uploads/uploads.component.ts","webpack:///src/app/layout/uploads/uploads.component.html","webpack:///src/app/layout/ws-default/ws-default.component.ts","webpack:///src/app/layout/ws-default/ws-default.component.html","webpack:///src/app/materials/materials.module.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/content.service.ts","webpack:///src/app/services/player.service.ts","webpack:///src/app/services/services.module.ts","webpack:///src/app/services/socket.service.ts","webpack:///src/app/services/upload.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","path","window","location","hostname","config","url","options","routes","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","UppercaseDirective","_el","_renderer","evt","keyCode","key","value","nativeElement","toUpperCase","setProperty","_onChange","preventDefault","_touched","fn","isDisabled","provide","useExisting","multi","ContentsComponent","contentService","tableHeader","currentSelectedContent","init","latest","subscribe","input","console","log","result","dataList","data","item","is_selected","currentContentList","masterSelected","selectListContentEvent","content","length","push","check","find","filename","undefined","filter","ControlsComponent","LayoutComponent","router","socket","auth","subMenuList","icon","route","name","currentSubMenu","isLogIn","wsDisconnected","isUserLoggedIn","wsDisconnect","sendAuth","snav","toggle","navigate","LoginComponent","form","username","required","password","masterItem","valid","login","response","setMasterId","current_master_id","reload","submit","PlayerListComponent","PlayerComponent","player","playerlist","currentPlayerContent","get_all_player","online","get_player_online","response2","onlineList","found","element","player_id","tablePlayerList","switchMenu","menu","registeredPlayer","unregisteredPlayer","allPlayer","registered","playerId","send_msg","DeleteModalComponent","uploadService","dialogRef","isSuccess","deleteList","Array","isArray","forEach","index","delete_file","close","event","cancel","confirm","ImportModalComponent","song","importData","artist","genre","album","language","country","duration","extension","sound","controls","setValue","disable","newValue","toSend","valuechange","PreviewModalComponent","previewType","previewData","checkExtension","file","extn","split","pop","imageExtensions","Set","videoExtenstion","audioExtenstion","has","toLowerCase","UploadModalComponent","fileData","uploadId","valueUploaded","uplodedSuccessFile","formData","FormData","append","upload_file","events","type","UploadProgress","Math","round","loaded","total","Response","status","body","nextUpload","send","fileInput","i","target","files","fileProgress","UploadsComponent","dialog","list","uploadList","children","sendData","open","width","height","afterClosed","incoming","ngOnInit","openDialog","WsDefaultComponent","MaterialsModule","AuthService","http","httpOptions","headers","masterId","sessionStorage","setItem","getItem","username1","password1","log_in","post","JSON","stringify","pipe","errorHandl","user","removeItem","error","errorMessage","ErrorEvent","message","providedIn","ContentService","get","PlayerService","allPlayerList","ServicesModule","SocketService","playerListener","clientListener","masterListener","timerPromise","socketDisconnect","isAlive","rxHeartBeat","msg","clearTimeout","getSocketId","socket_id","emit","setTimeout","rxMaster","socketBootstrap","txHeartBeat","timmer","socketId","cmd","master_id","getMasterId","fromEvent","setSocketId","to","type1","data1","UploadService","reportProgress","observe","inputPath","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { PlayerComponent } from './layout/player/player.component';\nimport { ContentsComponent } from './layout/contents/contents.component';\nimport { UploadsComponent } from './layout/uploads/uploads.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\nconst path = 'http://' + window.location.hostname + ':3003';\nconst config: SocketIoConfig = { url: path, options: {} };\n\nconst routes: Routes = [\n  { path: '', component: ContentsComponent },\n  { path: 'player', component: PlayerComponent },\n  { path: 'upload', component: UploadsComponent },\n  { path: 'content', component: ContentsComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    SocketIoModule.forRoot(config)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'k-master';\n}\n","<app-layout></app-layout>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialsModule } from './materials/materials.module';\nimport { ServicesModule } from './services/services.module';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { LayoutComponent } from './layout/layout.component';\nimport { LoginComponent } from './layout/login/login.component';\nimport { ContentsComponent } from './layout/contents/contents.component';\nimport { ControlsComponent } from './layout/controls/controls.component';\nimport { UploadsComponent } from './layout/uploads/uploads.component';\nimport { UploadModalComponent } from './layout/uploads/modal/upload-modal/upload-modal.component';\nimport { DeleteModalComponent } from './layout/uploads/modal/delete-modal/delete-modal.component';\nimport { PreviewModalComponent } from './layout/uploads/modal/preview-modal/preview-modal.component';\nimport { ImportModalComponent } from './layout/uploads/modal/import-modal/import-modal.component';\nimport { UppercaseDirective } from './directive/uppercase.directive';\nimport { PlayerComponent } from './layout/player/player.component';\nimport { PlayerListComponent } from './layout/player/player-list/player-list.component';\nimport { WsDefaultComponent } from './layout/ws-default/ws-default.component';\n\nconst path = 'http://' + window.location.hostname + ':3003';\nconst config: SocketIoConfig = { url: path, options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    LoginComponent,\n    ContentsComponent,\n    ControlsComponent,\n    UploadsComponent,\n    UploadModalComponent,\n    DeleteModalComponent,\n    PreviewModalComponent,\n    ImportModalComponent,\n    UppercaseDirective,\n    PlayerComponent,\n    PlayerListComponent,\n    WsDefaultComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SocketIoModule.forRoot(config),\n    MaterialsModule,\n    ServicesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  A,\n  Z,\n} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  OnInit,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Directive({\n  selector: '[appUppercase]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => UppercaseDirective),\n      multi: true,\n    },\n  ],\n})\nexport class UppercaseDirective implements ControlValueAccessor {\n  /** implements ControlValueAccessorInterface */\n  _onChange: (_: any) => void;\n\n  /** implements ControlValueAccessorInterface */\n  _touched: () => void;\n\n  constructor( @Self() private _el: ElementRef, private _renderer: Renderer2) { }\n\n  /** Trata as teclas */\n  @HostListener('keyup', ['$event'])\n  onKeyDown(evt: KeyboardEvent) {\n    const keyCode = evt.keyCode;\n    const key = evt.key;\n    if (keyCode >= A && keyCode <= Z) {\n      const value = this._el.nativeElement.value.toUpperCase();\n      this._renderer.setProperty(this._el.nativeElement, 'value', value);\n      this._onChange(value);\n      evt.preventDefault();\n    }\n  }\n\n  @HostListener('blur', ['$event'])\n  onBlur() {\n    this._touched();\n  }\n\n  /** Implementation for ControlValueAccessor interface */\n  writeValue(value: any): void {\n    this._renderer.setProperty(this._el.nativeElement, 'value', value);\n  }\n\n  /** Implementation for ControlValueAccessor interface */\n  registerOnChange(fn: (_: any) => void): void {\n    this._onChange = fn;\n  }\n\n  /** Implementation for ControlValueAccessor interface */\n  registerOnTouched(fn: () => void): void {\n    this._touched = fn;\n  }\n\n  /** Implementation for ControlValueAccessor interface */\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._el.nativeElement, 'disabled', isDisabled);\n  }\n}\n","import { ContentService } from './../../services/content.service';\nimport { Component, OnInit, ViewChild} from '@angular/core';\nimport { MatTable, MatTableDataSource } from \"@angular/material/table\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\nexport interface ContentList {\n  title: string;\n  artist: string;\n  genre: string;\n  album: string;\n  language: string;\n  country: string;\n  duration: string;\n  file_extension: string;\n  filename: string;\n  size: number;\n  sound: string;\n  upload_by: string;\n  upload_date: number;\n  update_date: number;\n  is_selected: boolean;\n}\n\n@Component({\n  selector: 'app-contents',\n  templateUrl: './contents.component.html',\n  styleUrls: ['./contents.component.css']\n})\nexport class ContentsComponent implements OnInit {\n\n  currentContentList: MatTableDataSource<ContentList>;\n\n  tableHeader: string[] = [\n    \"select\",\n    \"title\",\n    \"artist\",\n    \"genre\",\n    \"language\",\n    \"country\",\n    \"uploaded\",\n    \"action\"\n  ];\n\n  masterSelected: boolean;\n  currentSelectedContent = [];\n\n  constructor(\n    private contentService: ContentService\n    ) { }\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  init() {\n    this.contentService.latest().subscribe((input) => {\n      console.log('contentService : ', input);\n      if (input.result === \"success\") {\n        const dataList = input.data;\n        for (const item of dataList) {\n          item.is_selected = false;\n        }\n        this.currentContentList = new MatTableDataSource<ContentList>(dataList);\n        console.log('this.contentList.data : ', this.currentContentList.data);\n      } else {\n        console.log('Error this.contentList.data');\n      }\n    });\n  }\n\n  selectMasterEvent() {\n    console.log('Select All : ' + this.masterSelected);\n    if (this.masterSelected) {\n      for (const item of this.currentContentList.data) {\n        item.is_selected = this.masterSelected;\n        this.selectListContentEvent(item);\n      }\n    } else {\n      for (const item of this.currentContentList.data) {\n        item.is_selected = this.masterSelected;\n        this.selectListContentEvent(item);\n      }\n    }\n  }\n\n  selectListContentEvent(content) {\n    if (content.is_selected) {\n      if (this.currentSelectedContent.length === 0) {\n        this.currentSelectedContent.push(content);\n      } else {\n        const check = this.currentSelectedContent.find(\n          item => item.filename === content.filename\n        );\n        if (check === undefined) {\n          this.currentSelectedContent.push(content);\n        }\n      }\n    } else {\n      this.currentSelectedContent = this.currentSelectedContent.filter(\n        item => item.filename !== content.filename\n      );\n    }\n  }\n\n}\n","<div class=\"layout\">\n    <mat-toolbar color=\"primary\">\n        <button mat-raised-button matTooltip=\"home\" color=\"primary\" class=\"menu-button\">\n        <mat-icon>home</mat-icon> &nbsp; Home\n        </button> &nbsp;&nbsp;\n        <span>Karaoke List</span>\n        <span class=\"fill-remaining-space\"></span>\n    </mat-toolbar>\n\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Filter</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            Text content\n        </mat-card-content>\n        <mat-card-actions align=\"start\">\n            <button mat-button>Action1</button>\n        </mat-card-actions>\n    </mat-card>\n\n    <div class=\"tableContainer\">\n        <table mat-table [dataSource]=\"currentContentList\" class=\"tableStyle\">\n\n            <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','width':'10%','text-align': 'center','color': '#fff'}\">\n                    <mat-checkbox [ngClass]=\"{'checkboxselect':masterSelected, 'checkboxdiselect':!masterSelected}\" [(ngModel)]=\"masterSelected\" name=\"list_name\" value=\"m1\" (change)=\"selectMasterEvent()\">\n                    </mat-checkbox>\n                </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center','color': '#fff'}\">\n                    <mat-checkbox [ngClass]=\"{'checkboxselect':row.is_selected, 'checkboxdiselect':!row.is_selected}\" [(ngModel)]=\"row.is_selected\" name=\"list_name\" value=\"row.id\" (change)=\"selectListContentEvent(row)\">\n                    </mat-checkbox>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"title\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','width':'20%','color': '#fff'}\">\n                    Title </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <span> {{row.title}}</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"artist\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%','color': '#fff'}\">\n                    Artist </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.artist}}</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"genre\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%','color': '#fff'}\">\n                    Genre </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.genre}}</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"language\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%','color': '#fff'}\">\n                    Language </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.language}}</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"country\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%','color': '#fff'}\">\n                    Country </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.country}}</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"uploaded\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%','color': '#fff'}\">\n                    Added Date </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.update_date | date: 'yyyy-MM-dd'}}</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"action\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%'}\"></th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <button mat-raised-button matTooltip=\"Info\" color=\"primary\" class=\"menu-button\">\n                    <mat-icon>info</mat-icon> &nbsp; Info\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"tableHeader; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: tableHeader;\"></tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-controls',\n  templateUrl: './controls.component.html',\n  styleUrls: ['./controls.component.css']\n})\nexport class ControlsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>controls works!</p>\n","import { AuthService } from './../services/auth.service';\nimport { SocketService } from '../services/socket.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  @ViewChild('snav', { static: false }) snav;\n\n  subMenuList = [{\n    id: 1,\n    icon: '',\n    route: 'KList',\n    name: 'Karaoke List'\n  },\n  {\n    id: 2,\n    icon: '',\n    route: 'upload',\n    name: 'Upload'\n  },\n  {\n    id: 3,\n    icon: '',\n    route: 'player',\n    name: 'Player'\n  }\n];\n\n  currentSubMenu = this.subMenuList[0];\n  isLogIn = false;\n  wsDisconnected = false;\n\n  constructor(\n    private router: Router,\n    private socket: SocketService,\n    private auth: AuthService) {\n      if (this.auth.isUserLoggedIn()) {\n        this.isLogIn = true;\n      } else {\n        this.isLogIn = false;\n      }\n\n      this.socket.wsDisconnect.subscribe(data => {\n        this.wsDisconnected = data;\n      });\n    }\n\n  ngOnInit(): void {\n    if (this.auth.isUserLoggedIn()) {\n      this.socket.sendAuth();\n    }\n  }\n\n  routeTo(router) {\n    this.snav.toggle();\n    switch (router.route) {\n      case 'KList':\n          this.currentSubMenu = router;\n          this.router.navigate(['/content']);\n          break;\n      case 'upload':\n          this.currentSubMenu = router;\n          this.router.navigate(['/upload']);\n          break;\n      case 'player':\n        this.currentSubMenu = router;\n        this.router.navigate(['/player']);\n        break;\n      default:\n          break;\n    }\n  }\n\n}\n","<app-login *ngIf=\"!isLogIn\"></app-login>\n<div *ngIf=\"isLogIn\" class=\"example-container\">\n    <mat-toolbar color=\"primary\" class=\"example-toolbar\">\n        <button mat-icon-button (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\n        <h1 class=\"example-app-name\">Karaoke Manager &nbsp;>&nbsp;{{currentSubMenu.name}}</h1>\n    </mat-toolbar>\n\n    <mat-sidenav-container class=\"example-sidenav-container\">\n        <mat-sidenav #snav class=\"sideNav\">\n            <mat-nav-list>\n                <a (click)=\"routeTo(nav)\" mat-list-item *ngFor=\"let nav of subMenuList\">\n                {{nav.name}}\n                <mat-divider> </mat-divider>\n              </a>\n            </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-sidenav-content>\n            <router-outlet></router-outlet>\n            <!-- <app-contents *ngIf=\"currentSubMenu.route==='KList'\"></app-contents>\n            <app-uploads *ngIf=\"currentSubMenu.route==='upload'\"></app-uploads> -->\n        </mat-sidenav-content>\n\n    </mat-sidenav-container>\n\n    <!-- <app-footer class=\"footer\"></app-footer> -->\n</div>\n<app-ws-default *ngIf=\"wsDisconnected\" class=\"wsdisconnect\"></app-ws-default>\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(private router: Router, private auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    const masterItem = this.form.value;\n    if (this.form.valid) {\n      this.auth.login(masterItem.username, masterItem.password).subscribe((response) => {\n        console.log(response);\n        if (response.data.result === 'success') {\n          const data = response.data.data;\n          this.auth.setMasterId(data.current_master_id);\n          window.location.reload();\n        }\n     });\n    }\n  }\n\n}\n","<div class=\"layout\">\n\n    <mat-card style=\"width: 50%;\">\n\n        <mat-card-title style=\"width: 100%;text-align: center;\">Login</mat-card-title>\n        <mat-card-subtitle style=\"width: 100%;text-align: center;\">Please enter requirement below</mat-card-subtitle>\n\n        <mat-card-content style=\"width: 100%;\">\n            <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n                <p>\n                    <mat-form-field style=\"width: 100%;\">\n                        <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n                        <mat-hint>username or email</mat-hint>\n                    </mat-form-field>\n                </p>\n\n                <p>\n                    <mat-form-field style=\"width: 100%;\">\n                        <input type=\"text\" matInput placeholder=\"Password\" formControlName=\"password\">\n                        <mat-hint>Player name example \"TV1\"</mat-hint>\n                    </mat-form-field>\n                </p>\n\n                <div style=\"text-align: center;\">\n                    <button type=\"submit\" mat-button color=\"primary\">Login</button>\n                </div>\n\n            </form>\n        </mat-card-content>\n\n    </mat-card>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-player-list',\n  templateUrl: './player-list.component.html',\n  styleUrls: ['./player-list.component.css']\n})\nexport class PlayerListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>player-list works!</p>\n","import { SocketService } from './../../services/socket.service';\nimport { PlayerService } from './../../services/player.service';\nimport { Component, OnInit } from '@angular/core';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\nexport interface PlayerList {\n  player_name: string;\n  player_id: string;\n  registered: boolean;\n  insert_date: number;\n  update_date: number;\n  online: boolean;\n  is_selected: boolean;\n}\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css']\n})\nexport class PlayerComponent implements OnInit {\n\n  playerlist: Array<PlayerList> = [];\n\n  tablePlayerList: MatTableDataSource<PlayerList>;\n\n  tableHeader: string[] = [\n    'select',\n    'player',\n    'status',\n    'occupied',\n    'control'\n  ];\n\n  masterSelected: boolean;\n  currentPlayerContent = [];\n\n  constructor(\n    private player: PlayerService,\n    private socket: SocketService\n    ) {\n\n    }\n\n  ngOnInit(): void {\n    this.player.get_all_player().subscribe((response: any) => {\n      if (response.result === 'success') {\n        for (const item of response.data) {\n          item.is_selected = false;\n          item.online = false;\n          this.playerlist.push(item);\n        }\n        this.player.get_player_online().subscribe((response2: any) => {\n          if (response2.result === 'success') {\n            const onlineList = response2.data;\n            for (const item of this.playerlist) {\n              const found = onlineList.find(element => element.player_id === item.player_id);\n              if (found) {\n                item.online = true;\n              }\n            }\n          }\n          console.log(this.playerlist);\n          this.tablePlayerList = new MatTableDataSource<PlayerList>(this.playerlist);\n          this.switchMenu('registered');\n        });\n      }\n    });\n  }\n\n  selectMasterEvent() {\n    console.log('Select All : ' + this.masterSelected);\n    if (this.masterSelected) {\n      for (const item of this.tablePlayerList.data) {\n        item.is_selected = this.masterSelected;\n        this.selectListContentEvent(item);\n      }\n    } else {\n      for (const item of this.tablePlayerList.data) {\n        item.is_selected = this.masterSelected;\n        this.selectListContentEvent(item);\n      }\n    }\n  }\n\n  selectListContentEvent(content) {\n    if (content.is_selected) {\n      if (this.currentPlayerContent.length === 0) {\n        this.currentPlayerContent.push(content);\n      } else {\n        const check = this.currentPlayerContent.find(\n          item => item.filename === content.filename\n        );\n        if (check === undefined) {\n          this.currentPlayerContent.push(content);\n        }\n      }\n    } else {\n      this.currentPlayerContent = this.currentPlayerContent.filter(\n        item => item.filename !== content.filename\n      );\n    }\n  }\n\n  switchMenu(menu) {\n    switch (menu) {\n      case 'registered': {\n        this.registeredPlayer();\n        break;\n      }\n      case 'unregistered': {\n        this.unregisteredPlayer();\n        break;\n      }\n      case 'all': {\n        this.allPlayer();\n        break;\n      }\n      default: {\n        console.log('undefined menu' + menu);\n        break;\n      }\n    }\n  }\n\n  registeredPlayer() {\n    this.tablePlayerList.data = this.playerlist.filter(item => {\n      return item.registered === true;\n    });\n  }\n\n  unregisteredPlayer() {\n    this.tablePlayerList.data = this.playerlist.filter(item => {\n      return item.registered === false;\n    });\n  }\n\n  allPlayer() {\n    this.tablePlayerList.data = this.playerlist;\n  }\n\n  approvePlayer(playerId: any) {\n    console.log(playerId);\n    this.socket.send_msg('approve_player', 'approve_player', playerId);\n  }\n\n}\n","<mat-card>\n    <mat-toolbar>\n        <mat-toolbar-row>\n            <mat-nav-list class=\"menuPadding\" (click)=\"switchMenu('registered')\">\n                Registered\n            </mat-nav-list>\n            <mat-nav-list class=\"menuPadding\" (click)=\"switchMenu('unregistered')\">\n                Unregistered\n            </mat-nav-list>\n            <mat-nav-list class=\"menuPadding\" (click)=\"switchMenu('all')\">\n                All Player\n            </mat-nav-list>\n        </mat-toolbar-row>\n    </mat-toolbar>\n    <mat-card-content>\n        <div class=\"tableContainer\">\n            <table mat-table [dataSource]=\"tablePlayerList\" class=\"tableStyle\">\n\n                <ng-container matColumnDef=\"select\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','width':'10%','text-align': 'center','color': 'black'}\">\n                        <mat-checkbox [ngClass]=\"{'checkboxselect':masterSelected, 'checkboxdiselect':!masterSelected}\" [(ngModel)]=\"masterSelected\" name=\"list_name\" value=\"m1\" (change)=\"selectMasterEvent()\">\n                        </mat-checkbox>\n                    </th>\n                    <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center','color': 'black'}\">\n                        <mat-checkbox [ngClass]=\"{'checkboxselect':row.is_selected, 'checkboxdiselect':!row.is_selected}\" [(ngModel)]=\"row.is_selected\" name=\"list_name\" value=\"row.id\" (change)=\"selectListContentEvent(row)\">\n                        </mat-checkbox>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"player\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','width':'10%','color': 'black'}\">\n                        Player </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <span> {{row.player_name}}</span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"status\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%','color': 'black'}\">\n                        Status </th>\n                    <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                        <span *ngIf=\"row.online\" class=\"dotOnline\">  </span>\n                        <span *ngIf=\"!row.online\" class=\"dotOffline\">  </span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"occupied\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%','color': 'black'}\">\n                        Occupied </th>\n                    <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                        <span></span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"control\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%','color': 'black'}\">\n                        Control </th>\n                    <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                        <span *ngIf=\"!row.registered\">\n                          <button mat-raised-button matTooltip=\"Info\" color=\"primary\" class=\"menu-button\" (click)=\"approvePlayer(row.player_id)\">\n                            <mat-icon>info</mat-icon> &nbsp; Approve\n                            </button>\n                        </span>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"tableHeader; sticky: true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: tableHeader;\"></tr>\n            </table>\n        </div>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Optional, Inject, ViewChild } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { HttpEventType } from '@angular/common/http';\nimport { UploadService } from './../../../../services/upload.service';\n\n@Component({\n  selector: 'app-delete-modal',\n  templateUrl: './delete-modal.component.html',\n  styleUrls: ['./delete-modal.component.css']\n})\nexport class DeleteModalComponent implements OnInit {\n\n  isSuccess: any[] = [];\n  deleteList: any[] = [];\n\n  constructor(\n    private uploadService: UploadService,\n    public dialogRef: MatDialogRef<DeleteModalComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (Array.isArray(this.data)) {\n      this.deleteList = this.data;\n    } else {\n      this.deleteList.push(this.data);\n    }\n    console.log(this.deleteList);\n   }\n\n  ngOnInit(): void {\n  }\n\n  remove(name) {\n    this.deleteList = this.deleteList.filter(\n      item => item.name !== name\n    );\n  }\n\n  confirm() {\n    this.deleteList.forEach((item, index) => {\n      this.uploadService.delete_file(item).subscribe(data => {\n        console.log(data);\n        console.log(index);\n        if (data.data.result === 'success') {\n          console.log('success');\n          this.isSuccess[index] = true;\n        }\n      });\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close({ event: 'Cancel' , data:  ''});\n  }\n\n}\n","<h1 matDialogTitle>Delete</h1>\n\n<mat-dialog-content>\n    <div *ngFor=\"let file of deleteList; let i=index\" style=\"display: flex;\">\n        {{i+1}}. {{file.name}}\n        <span class=\"fill-remaining-space\"></span>\n        <ng-container *ngIf=\"isSuccess[i]; else notSuccess\">\n            <mat-icon aria-label=\"success\">done</mat-icon>&nbsp;<span>Deleted</span>\n        </ng-container>\n        <ng-template #notSuccess>\n            <mat-icon aria-label=\"notSuccess\" (click)=\"remove(file.name)\">clear</mat-icon>\n        </ng-template>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <span class=\"fill-remaining-space\"></span>\n    <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Close</button>\n    <button mat-raised-button (click)=\"confirm()\" color=\"primary\">Confirm</button>\n    <span class=\"fill-remaining-space\"></span>\n</mat-dialog-actions>\n","import { Component, OnInit, Optional, Inject, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { UploadService } from './../../../../services/upload.service';\n//import { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-import-modal',\n  templateUrl: './import-modal.component.html',\n  styleUrls: ['./import-modal.component.css'],\n})\nexport class ImportModalComponent implements OnInit {\n  song: any = {};\n  url = 'http://' + window.location.hostname + ':3004/';\n  importData: any = {};\n\n  form: FormGroup = new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    artist: new FormControl('', [Validators.required]),\n    genre: new FormControl('', [Validators.required]),\n    album: new FormControl('NONE', [Validators.required]),\n    language: new FormControl('', [Validators.required]),\n    country: new FormControl('NONE', [Validators.required]),\n    duration: new FormControl('', [Validators.required]),\n    filename: new FormControl('', [Validators.required]),\n    path: new FormControl('', [Validators.required]),\n    extension: new FormControl('', [Validators.required]),\n    sound: new FormControl('karaoke'),\n  });\n\n  constructor(\n    private uploadService: UploadService,\n    public dialogRef: MatDialogRef<ImportModalComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.importData = this.data;\n    console.log('this.importData : ', this.importData);\n  }\n\n  ngOnInit(): void {\n    // init form\n    this.form.controls.title.setValue(this.importData.name.toUpperCase());\n    this.form.controls.filename.setValue(this.importData.name);\n    this.form.controls.path.setValue(this.importData.path);\n    this.form.controls.extension.setValue(this.importData.extension);\n\n    this.uploadService.duration(this.importData).subscribe((data) => {\n      console.log(data);\n      // init form\n      this.form.controls.duration.setValue(data.data);\n      this.form.controls.duration.disable();\n    });\n  }\n\n  valuechange(newValue) {\n    this.form.controls.title.setValue(newValue);\n  }\n\n  submit() {\n    if (this.form.valid) {\n      const toSend = {\n        title: this.form.controls.title.value,\n        artist: this.form.controls.artist.value,\n        genre: this.form.controls.genre.value,\n        album: this.form.controls.album.value,\n        language: this.form.controls.language.value,\n        country: this.form.controls.country.value,\n        duration: this.form.controls.duration.value,\n        extension: this.form.controls.extension.value,\n        filename: this.form.controls.filename.value,\n        path: this.form.controls.path.value,\n        sound: this.form.controls.sound.value,\n      };\n      console.log(toSend);\n      this.uploadService.import(toSend).subscribe((data) => {\n        console.log(data);\n      });\n    }\n  }\n\n  cancel() {\n    this.dialogRef.close({ event: 'Cancel', data: '' });\n  }\n}\n","<div class=\"fixActionRow\">\n    <h1 matDialogTitle style=\"display: flex;\">\n        Import\n        <span class=\"fill-remaining-space\"></span>\n        <button mat-icon-button matTooltip=\"Close\" (click)=\"cancel()\">\n  <mat-icon>clear</mat-icon>\n</button>\n    </h1>\n\n    <mat-dialog-content class=\"media\">\n        <div class=\"left\">\n            <mat-video [src]=\"url + importData.name\"></mat-video>\n        </div>\n        <div class=\"right\">\n            <mat-card style=\"height: 100%;\">\n                <mat-card-title style=\"text-align: center;\">\n                    Content Details\n                </mat-card-title>\n                <mat-card-content>\n                    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n                        <mat-form-field style=\"width: 100%;\">\n                            <input type=\"text\" matInput placeholder=\"Title\" formControlName=\"title\" appUppercase (input)=\"valuechange(myInput.value)\" (keypress)=\"valuechange(myInput.value)\" #myInput />\n                        </mat-form-field>\n\n                        <mat-form-field style=\"width: 100%;\">\n                            <input type=\"text\" matInput placeholder=\"Artist\" formControlName=\"artist\" appUppercase />\n                        </mat-form-field>\n\n                        <mat-form-field style=\"width: 100%;\">\n                            <input type=\"text\" matInput placeholder=\"Genre\" formControlName=\"genre\" appUppercase />\n                        </mat-form-field>\n\n                        <mat-form-field style=\"width: 100%;\">\n                            <input type=\"text\" matInput placeholder=\"Album\" formControlName=\"album\" appUppercase />\n                        </mat-form-field>\n\n                        <mat-form-field style=\"width: 100%;\">\n                            <input type=\"text\" matInput placeholder=\"Language\" formControlName=\"language\" appUppercase />\n                        </mat-form-field>\n\n                        <mat-form-field style=\"width: 100%;\">\n                            <input type=\"text\" matInput placeholder=\"Country\" formControlName=\"country\" appUppercase />\n                        </mat-form-field>\n\n                        <mat-card-subtitle style=\"padding-top: 10px;text-align: center;\"> Video & Audio </mat-card-subtitle>\n\n                        <mat-form-field style=\"width: 100%;\">\n                            <input type=\"text\" matInput placeholder=\"Duration (HH:MM:SS)\" formControlName=\"duration\">\n                        </mat-form-field>\n\n                        <mat-radio-group formControlName=\"sound\">\n                            <mat-radio-button checked value=\"karaoke\">Karaoke (L/R)</mat-radio-button>&nbsp;&nbsp;\n                            <mat-radio-button value=\"mono\">MONO (No Vocal)</mat-radio-button>\n                        </mat-radio-group>\n\n                        <div style=\"padding-top: 10px;text-align: center;\">\n                            <button type=\"submit\" style=\"width: 100%;\" mat-raised-button color=\"primary\">\n                              Submit\n                            </button>\n                        </div>\n                    </form>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </mat-dialog-content>\n\n    <div class=\"spacer\"></div>\n\n    <!-- <mat-dialog-actions>\n        <span class=\"fill-remaining-space\"></span>\n        <button mat-raised-button (click)=\"submit()\" color=\"primary\">Submit</button>\n        <span class=\"fill-remaining-space\"></span>\n    </mat-dialog-actions> -->\n</div>","import { Component, OnInit, Optional, Inject, ViewChild } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-preview-modal',\n  templateUrl: './preview-modal.component.html',\n  styleUrls: ['./preview-modal.component.css']\n})\nexport class PreviewModalComponent implements OnInit {\n\n  url = 'http://' + window.location.hostname + ':3004/';\n  previewType = 'other';\n  previewData: any = {};\n\n  constructor(\n    public dialogRef: MatDialogRef<PreviewModalComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.previewData = this.data;\n  }\n\n  ngOnInit(): void {\n    console.log('Preview : ', this.previewData);\n    this.previewType = this.checkExtension(this.previewData.extension);\n    console.log(this.previewType);\n  }\n\n  checkExtension(file) {\n    const extn = file.split('.').pop();\n    const imageExtensions = new Set(['jpeg', 'jpg', 'png', 'gif']);\n    const videoExtenstion = new Set(['mp4', 'mov']);\n    const audioExtenstion = new Set(['mp3']);\n\n    if (imageExtensions.has(extn.toLowerCase())) {\n        return 'image';\n    } else if (videoExtenstion.has(extn.toLowerCase())) {\n        return 'video';\n    } else if (audioExtenstion.has(extn.toLowerCase())) {\n        return 'audio';\n    } else {\n        return 'other';\n    }\n  }\n\n  cancel() {\n    this.dialogRef.close({ event: 'Cancel' , data:  ''});\n  }\n\n}\n","<div class=\"fixActionRow\">\n    <h1 matDialogTitle style=\"display: flex;\">\n        Preview &nbsp;:&nbsp;{{previewData.name}}\n        <span class=\"fill-remaining-space\"></span>\n        <button mat-icon-button matTooltip=\"Close\" (click)=\"cancel()\">\n    <mat-icon>clear</mat-icon>\n  </button>\n    </h1>\n\n    <mat-dialog-content style=\"display: flex;\">\n        <div *ngIf=\"previewType==='image'\">\n            <img [src]=\"url + previewData.name\" />\n        </div>\n        <div *ngIf=\"previewType==='video'\">\n            <mat-video [src]=\"url + previewData.name\"></mat-video>\n        </div>\n        <div *ngIf=\"previewType==='audio'\">\n            <audio [src]=\"url + previewData.name\"></audio>\n        </div>\n        <div *ngIf=\"previewType==='other'\">\n            <p>Not Supported</p>\n        </div>\n\n    </mat-dialog-content>\n</div>","import { Component, OnInit, Optional, Inject, ViewChild } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { HttpEventType } from '@angular/common/http';\nimport { UploadService } from './../../../../services/upload.service';\n\n@Component({\n  selector: 'app-upload-modal',\n  templateUrl: './upload-modal.component.html',\n  styleUrls: ['./upload-modal.component.css']\n})\nexport class UploadModalComponent implements OnInit {\n  fileData: string[] = [];\n  uploadId = 0;\n  valueUploaded: any[] = [];\n  isSuccess: any[] = [];\n  uplodedSuccessFile = [];\n\n  constructor(\n    private uploadService: UploadService,\n    public dialogRef: MatDialogRef<UploadModalComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  send() {\n    const formData = new FormData();\n    formData.append('file', this.fileData[this.uploadId]);\n    this.uploadService.upload_file(formData).subscribe(events => {\n      if (events.type === HttpEventType.UploadProgress) {\n        console.log(\"uploadId: \", this.uploadId);\n        console.log(\n          \"Upload progress: \",\n          Math.round((events.loaded / events.total) * 100) + \"%\"\n        );\n        this.valueUploaded[this.uploadId] = Math.round(\n          (events.loaded / events.total) * 100\n        );\n      } else if (events.type === HttpEventType.Response) {\n        // console.log(events);\n        if (events.status === 200) {\n          // Upload success\n          this.isSuccess[this.uploadId] = true;\n          console.log('Upload Success : ', this.fileData[this.uploadId]);\n          const check: any = events.body;\n          console.log(check);\n          this.nextUpload();\n        } else {\n          // Error upload\n          this.isSuccess[this.uploadId] = false;\n          console.log('Fail to upload : ', + this.fileData[this.uploadId]);\n          this.nextUpload();\n        }\n      } else {\n        console.log('Large File');\n      }\n    });\n  }\n\n  nextUpload() {\n    this.uploadId++;\n    if (this.uploadId < this.fileData.length) {\n      this.send();\n    } else {\n      // Finish upload all files // Do something\n      console.log('Finish upload all files');\n    }\n  }\n\n  fileProgress(fileInput: any) {\n    for (let i = 0; i < fileInput.target.files.length; i++) {\n      this.fileData.push(fileInput.target.files[i]);\n      console.log(this.fileData[i]);\n    }\n  }\n\n  cancel() {\n    this.dialogRef.close({ event: 'Cancel' , data:  this.uplodedSuccessFile});\n  }\n\n}\n","<h1 matDialogTitle>File Upload</h1>\n\n<mat-dialog-content>\n    <form (ngSubmit)=\"send()\">\n        <div class=\"form-group fixed\">\n            <label for=\"file\" class=\"custom-file-upload\">\n              <mat-icon>file_upload</mat-icon> Select Files\n            </label>\n            <input type=\"file\" id=\"file\" multiple (change)=fileProgress($event)>\n            <span class=\"fill-remaining-space\"></span>\n            <button mat-raised-button class=\"right\" color=\"primary\">Submit</button>\n        </div>\n        <br>\n        <div *ngFor=\"let file of fileData; let i=index\">\n            <div class=\"right\">\n                <ng-container *ngIf=\"isSuccess[i]; else notSuccess\">\n                    <mat-icon aria-label=\"success\">done</mat-icon>\n                </ng-container>\n                <ng-template #notSuccess>\n                    <mat-icon aria-label=\"notSuccess\">clear</mat-icon>\n                </ng-template>\n            </div>\n            <div>\n                {{i+1}}. {{file.name}} - {{file.type}} - {{file.size}}\n                <mat-progress-bar mode=\"determinate\" [value]=\"valueUploaded[i]\" color=\"primary\"></mat-progress-bar>\n            </div>\n            <br>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <span class=\"fill-remaining-space\"></span>\n    <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Close</button>\n    <span class=\"fill-remaining-space\"></span>\n</mat-dialog-actions>\n","import { PreviewModalComponent } from './modal/preview-modal/preview-modal.component';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { FilesMeta } from './uploads-metadata';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadService } from '../../services/upload.service';\nimport { UploadModalComponent } from './modal/upload-modal/upload-modal.component';\nimport { DeleteModalComponent } from './modal/delete-modal/delete-modal.component';\nimport { ImportModalComponent } from './modal/import-modal/import-modal.component';\n\n@Component({\n  selector: 'app-uploads',\n  templateUrl: './uploads.component.html',\n  styleUrls: ['./uploads.component.css'],\n})\nexport class UploadsComponent implements OnInit {\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\n\n  tableHeader: string[] = [\n    'select',\n    'name',\n    'type',\n    'size',\n    'extension',\n    'action',\n  ];\n  uploadList: MatTableDataSource<FilesMeta>;\n  masterSelected: boolean;\n  currentSelectedContent = [];\n\n  constructor(private uploadService: UploadService, public dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.uploadService.list().subscribe((result) => {\n      console.log(result);\n      this.uploadList = new MatTableDataSource<FilesMeta>(result.data.children);\n    });\n\n    this.currentSelectedContent = [];\n  }\n\n  selectMasterEvent() {\n    console.log('Select All : ' + this.masterSelected);\n    if (this.masterSelected) {\n      for (const item of this.uploadList.data) {\n        item.is_selected = this.masterSelected;\n        this.selectListContentEvent(item);\n      }\n    } else {\n      for (const item of this.uploadList.data) {\n        item.is_selected = this.masterSelected;\n        this.selectListContentEvent(item);\n      }\n    }\n  }\n\n  selectListContentEvent(content) {\n    if (content.is_selected) {\n      if (this.currentSelectedContent.length === 0) {\n        this.currentSelectedContent.push(content);\n      } else {\n        const check = this.currentSelectedContent.find(\n          item => item.name === content.name\n        );\n        if (check === undefined) {\n          this.currentSelectedContent.push(content);\n        }\n      }\n    } else {\n      this.currentSelectedContent = this.currentSelectedContent.filter(\n        item => item.name !== content.name\n      );\n    }\n  }\n\n  openDialog(type, sendData) {\n    let dialogRef: any;\n\n    switch (type) {\n      case 'upload':\n        dialogRef = this.dialog.open(UploadModalComponent, {\n          width: '70%',\n          height: '70%',\n          data: sendData,\n        });\n        break;\n      case 'delete':\n        dialogRef = this.dialog.open(DeleteModalComponent, {\n          width: 'auto',\n          height: 'auto',\n          data: sendData,\n        });\n        break;\n      case 'preview':\n        dialogRef = this.dialog.open(PreviewModalComponent, {\n          width: 'auto',\n          height: 'auto',\n          data: sendData,\n        });\n        break;\n      case 'import':\n        dialogRef = this.dialog.open(ImportModalComponent, {\n          width: '80%',\n          height: '80%',\n          data: sendData,\n        });\n        break;\n      default:\n        break;\n    }\n\n    dialogRef.afterClosed().subscribe((result) => {\n      const incoming = result;\n      switch (type) {\n        case 'upload':\n          console.log('UploadFile Incomming : ', incoming);\n          this.ngOnInit();\n          break;\n        case 'delete':\n          console.log('Delete Incomming : ', incoming);\n          this.ngOnInit();\n          break;\n        case 'preview':\n          console.log('Delete Incomming : ', incoming);\n          break;\n        case 'import':\n          console.log('Import Incomming : ', incoming);\n          this.ngOnInit();\n          break;\n        default:\n          break;\n      }\n    });\n  }\n}\n","<div class=\"layout\">\n    <mat-toolbar color=\"primary\">\n        <span>Upload</span>\n        <button mat-icon-button matTooltip=\"Refresh\" (click)=\"ngOnInit()\">\n          <mat-icon>refresh</mat-icon>\n        </button>\n        <span class=\"fill-remaining-space\"></span>\n        <button *ngIf=\"currentSelectedContent.length > 0\" mat-icon-button matTooltip=\"Delete\" (click)=\"openDialog('delete', currentSelectedContent)\" style=\"width: 100px;\">\n          <mat-icon>delete</mat-icon> &nbsp; Delete\n        </button>\n        <button mat-icon-button matTooltip=\"Upload file\" (click)=\"openDialog('upload', '')\" style=\"width: 100px;\">\n          <mat-icon>file_upload</mat-icon> &nbsp; Upload\n        </button>\n    </mat-toolbar>\n\n    <div class=\"tableContainer\">\n        <table mat-table [dataSource]=\"uploadList\" class=\"tableStyle\">\n            <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','width':'10%'}\">\n                    Select\n                    <mat-checkbox [ngClass]=\"{'checkboxselect':masterSelected, 'checkboxdiselect':!masterSelected}\" [(ngModel)]=\"masterSelected\" name=\"list_name\" value=\"m1\" (change)=\"selectMasterEvent()\">\n                    </mat-checkbox>\n                </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <mat-checkbox [ngClass]=\"{'checkboxselect':row.is_selected, 'checkboxdiselect':!row.is_selected}\" [(ngModel)]=\"row.is_selected\" name=\"list_name\" value=\"row.id\" (change)=\"selectListContentEvent(row)\">\n                    </mat-checkbox>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','width':'25%'}\">\n                    Name </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <span> {{row.name}}</span>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"type\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%'}\">\n                    Type </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.type}}</span>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"size\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'15%'}\">\n                    Size </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.size}}</span>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"extension\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'10%'}\">\n                    Extension </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <span> {{row.extension}}</span>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"action\">\n                <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'font-size': '18px','text-align': 'center','width':'20%'}\">\n                    Action </th>\n                <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"{'text-align': 'center'}\">\n                    <button mat-raised-button matTooltip=\"Play\" color=\"primary\" class=\"menu-button\" (click)=\"openDialog('preview', row)\">\n                    <mat-icon>play_arrow</mat-icon> &nbsp; Preview\n                    </button>\n\n\t\t    <button mat-raised-button matTooltip=\"Rename\" color=\"primary\" class=\"menu-button\" (click)=\"openDialog('rename', row)\">\n                    <mat-icon>play_arrow</mat-icon> &nbsp; Rename\n                    </button>\n\n                    <button mat-raised-button matTooltip=\"Import to Karaoke\" color=\"primary\" class=\"menu-button\" (click)=\"openDialog('import', row)\">\n                    <mat-icon>edit</mat-icon> &nbsp; Import\n                    </button>\n\n                    <button mat-raised-button matTooltip=\"Delete\" color=\"primary\" class=\"menu-button\" (click)=\"openDialog('delete', row)\">\n                    <mat-icon>delete</mat-icon> &nbsp; Delete\n                  </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"tableHeader; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: tableHeader;\"></tr>\n        </table>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ws-default',\n  templateUrl: './ws-default.component.html',\n  styleUrls: ['./ws-default.component.css']\n})\nexport class WsDefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout\">\n\n    <mat-card style=\"width: 50%;\">\n\n        <mat-card-title style=\"width: 100%;text-align: center;\">Connection Problem</mat-card-title>\n        <mat-card-subtitle style=\"width: 100%;text-align: center;\">waiting connection...</mat-card-subtitle>\n\n        <mat-card-content style=\"width: 100%;\">\n            <div style=\"display: flex;\">\n                <span class=\"fill-remaining-space\"></span>\n                <mat-spinner></mat-spinner>\n                <span class=\"fill-remaining-space\"></span>\n            </div>\n        </mat-card-content>\n\n    </mat-card>\n\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n\nimport { MatVideoModule } from 'mat-video';\nimport { NgxAudioPlayerModule } from 'ngx-audio-player';\nimport { ClickOutsideModule } from 'ng-click-outside';\n\n@NgModule({\n  imports: [\n    // additional\n    MatVideoModule,\n    NgxAudioPlayerModule,\n    ClickOutsideModule,\n\n    // CDK\n    A11yModule,\n    BidiModule,\n    DragDropModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n    ScrollingModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n\n    // angular\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n\n  exports: [\n    // additional\n    MatVideoModule,\n    NgxAudioPlayerModule,\n    ClickOutsideModule,\n\n    // CDK\n    A11yModule,\n    BidiModule,\n    DragDropModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n    ScrollingModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n\n    // angular\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatTreeModule\n  ]\n})\n\nexport class MaterialsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // Http Headers\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  url = 'http://' + window.location.hostname + ':3000';\n\n  constructor(private http: HttpClient) { }\n\n  setMasterId(masterId) {\n    sessionStorage.setItem('current_master_id', masterId);\n  }\n\n  getMasterId() {\n    return sessionStorage.getItem('current_master_id');\n  }\n\n  login(username1, password1) {\n    const data = {\n      log_in : {\n        username: username1,\n        password: password1\n      }\n    };\n    return this.http.post<any>(this.url + '/master/login', JSON.stringify(data), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.errorHandl)\n    );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('current_master_id');\n    console.log(!(user === null));\n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem('current_master_id');\n  }\n\n  // Error handling\n  errorHandl(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ContentService {\n\n  url = 'http://' + window.location.hostname + ':3002';\n\n   // Http Headers\n   httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  latest(): any {\n    return this.http.get(this.url + '/content/list');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n\n  // Http Headers\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  url = 'http://' + window.location.hostname + ':3000';\n\n  allPlayerList = [];\n\n  constructor(private http: HttpClient) { }\n\n  set_player(data) {\n    this.allPlayerList = data;\n  }\n\n  get_player_registered() {}\n\n  get_player_unregisterd() {}\n\n  get_all_player() {\n    return this.http.get(this.url + '/master/player_list');\n  }\n\n  get_player_online() {\n    return this.http.get(this.url + '/master/player_list_online');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { UploadService } from './upload.service';\nimport { SocketService } from './socket.service';\nimport { ContentService } from './content.service';\n\n@NgModule({\n  providers: [\n    UploadService,\n    SocketService,\n    ContentService\n  ]\n})\nexport class ServicesModule { }\n","import { AuthService } from './auth.service';\nimport { Injectable, Output, EventEmitter } from '@angular/core';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\nimport { Socket } from 'ngx-socket-io';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketService {\n  @Output() wsDisconnect: EventEmitter<any> = new EventEmitter();\n  @Output() playerListener: EventEmitter<any> = new EventEmitter();\n  @Output() clientListener: EventEmitter<any> = new EventEmitter();\n  @Output() masterListener: EventEmitter<any> = new EventEmitter();\n\n  timerPromise = null;\n  socketDisconnect = false;\n\n  socketId: string;\n\n  constructor(private socket: Socket, private auth: AuthService) {\n    if (this.auth.isUserLoggedIn()) {\n      this.isAlive();\n    }\n\n    this.rxHeartBeat().subscribe((msg) => {\n      console.log('Incoming heartbeat', msg);\n      // cancel timer\n      clearTimeout(this.timerPromise);\n\n      if (this.getSocketId() !== msg.socket_id) {\n        console.log('Socket id not same, send auth again');\n        this.sendAuth();\n      }\n\n      // ckeck condition\n      if (this.socketDisconnect) {\n        this.sendAuth();\n        this.socketDisconnect = false;\n        this.wsDisconnect.emit(false);\n      }\n\n      // send again\n      setTimeout(() => {\n        this.isAlive();\n      }, 3000);\n    });\n\n    this.rxMaster().subscribe((msg: any) => {\n      console.log('Incoming master', msg);\n      this.socketBootstrap(msg);\n    });\n  }\n\n  timmer() {\n    this.timerPromise = setTimeout(() => {\n      this.socketDisconnect = true;\n      this.wsDisconnect.emit(true);\n      console.log('Connection problem');\n    }, 6000);\n  }\n\n  isAlive() {\n    this.txHeartBeat();\n    this.timmer();\n  }\n\n  setSocketId(id) {\n    this.socketId = id;\n  }\n\n  getSocketId() {\n    return this.socketId;\n  }\n\n  sendAuth() {\n    const msg = {\n      cmd: 'req-socket-id',\n      type: 'master',\n      master_id: this.auth.getMasterId(),\n    };\n    this.socket.emit('kmaster', msg);\n  }\n\n  txHeartBeat() {\n    const msg = { cmd: 'heartbeat', socket_id: this.getSocketId() };\n    this.socket.emit('heartbeat', msg);\n  }\n\n  rxHeartBeat() {\n    return this.socket.fromEvent<any>('heartbeat').pipe(map((data) => data));\n  }\n\n  rxMaster() {\n    return this.socket.fromEvent<any>('kmaster').pipe(map((data) => data));\n  }\n\n  socketBootstrap(data: any) {\n    switch (data.cmd) {\n      case 'socket-id': {\n        this.setSocketId(data.socket_id);\n        break;\n      }\n      case 'master': {\n        // statements;\n        break;\n      }\n      case 'player': {\n        // statements;\n        break;\n      }\n      case 'client': {\n        // statements;\n        break;\n      }\n      default: {\n        // statements;\n        break;\n      }\n    }\n  }\n\n  send_msg(to: any, type1: any, data1: any) {\n    const msg = {\n      cmd: to,\n      master_id: this.auth.getMasterId(),\n      type: type1,\n      data: data1\n    };\n    this.socket.emit('kmaster', msg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  url = 'http://' + window.location.hostname + ':3004';\n\n  // Http Headers\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  list(): any {\n    return this.http.get(this.url + '/upload/list');\n  }\n\n  delete_file(data) {\n    return this.http.post<any>(this.url + '/upload/delete', JSON.stringify(data), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.errorHandl)\n    );\n  }\n\n  upload_file(formData) {\n    return this.http\n    .post(this.url + '/upload/fileUpload', formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  duration(inputPath) {\n    return this.http.post<any>(this.url + '/upload/duration', JSON.stringify(inputPath), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.errorHandl)\n    );\n  }\n\n  import(data) {\n    return this.http.post<any>(this.url + '/upload/import', JSON.stringify(data), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.errorHandl)\n    );\n  }\n\n  // Error handling\n  errorHandl(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}